using Intern.Common.Helpers;
using Intern.Data;
using Intern.DataModels.Exams;
using Intern.DataModels.User;
using Microsoft.EntityFrameworkCore;

namespace Intern.Services
{
    public class DatabaseProcess
    {
        private readonly ApiDbContext _context;
        private readonly PasswordHelper _passwordHelper;
        public DatabaseProcess(ApiDbContext apiDbContext, PasswordHelper passwordHelper)
        {
            _context = apiDbContext;
            _passwordHelper = passwordHelper;
        }

        public async Task<string> Seeder()
        {
            try
            {
                #region Condition
                // ✅ Prevent running twice
                if (await _context.ApplicationUsers.AnyAsync())
                    return "Database already seeded.";

                #endregion Condition

                #region App Users

                var appUsers = new[]
                {
                new ApplicationUserDM
                {
                    CreatedOnUtc = DateTime.UtcNow,
                    CreatedBy = "Seed User",
                    LoginId = "SuperAdmin1",
                    Email = "super1@gmail.com",
                    Name = "SuperAdmin",
                    Password = _passwordHelper.HashPassword("pass123"),
                    Role = DataModels.Enums.UserRoleDM.SuperAdmin

                }
            };
                await _context.ApplicationUsers.AddRangeAsync(appUsers);
                await _context.SaveChangesAsync();
                #endregion App Users

                #region ClientEmployee
                var users = new[]
                {
                new ClientUserDM
                {
                    CreatedOnUtc = DateTime.UtcNow,
                    CreatedBy = "Seeder",
                    LoginId = "client1",
                    Email = "client1@gmail.com",
                    Name = "clientEmployee1",
                    Password = _passwordHelper.HashPassword("pass123"),
                    Role = DataModels.Enums.UserRoleDM.ClientEmployee,
                    MobileNumber = "9906612121",
                    IsActive = true,
                    IsEmailConfirmed = true,
                    IsMobileNumberConfirmed = true

                },
                new ClientUserDM
                {
                    CreatedOnUtc = DateTime.UtcNow,
                    CreatedBy = "Seeder",
                    LoginId = "client2",
                    Email = "client2@gmail.com",
                    Name = "clientEmployee2",
                    Password = _passwordHelper.HashPassword("pass123"),
                    Role = DataModels.Enums.UserRoleDM.ClientEmployee,
                    MobileNumber = "9906612122",
                    IsActive = true,
                    IsEmailConfirmed = true,
                    IsMobileNumberConfirmed = true

                }
            };
                await _context.ClientUsers.AddRangeAsync(users);
                await _context.SaveChangesAsync();

                #endregion ClientEmployee

                #region Department

                // -----------------------------
                // Departments
                // -----------------------------
                var departments = new[]
                {
                new DepartmentDM { DepartmentName = "Revenue", Description = "Revenue Department" },
                new DepartmentDM { DepartmentName = "Health & Medical", Description = "Health & Medical Department" },
                new DepartmentDM { DepartmentName = "Law and Justice", Description = "Law and Justice Department" },
                new DepartmentDM { DepartmentName = "Agriculture and Skill Development", Description = "Agriculture and Skill Development Department" },
                new DepartmentDM { DepartmentName = "Education Development", Description = "Education Development Department" },
                new DepartmentDM { DepartmentName = "Power Development", Description = "Power Development Department" },
                new DepartmentDM { DepartmentName = "Public Works (PWD)", Description = "Public Works Department" },
                new DepartmentDM { DepartmentName = "Social Welfare", Description = "Social Welfare Department" },
                new DepartmentDM { DepartmentName = "Finance and Accounts", Description = "Finance and Accounts Department" },
                new DepartmentDM { DepartmentName = "Forest and Environment", Description = "Forest and Environment Department" },
                new DepartmentDM { DepartmentName = "IT", Description = "Information Technology Department" },
            };

                await _context.Departments.AddRangeAsync(departments);
                await _context.SaveChangesAsync();
                #endregion Department

                #region Posts

                var posts = new[]
                {
                new PostDM { PostName = "Junior Assistant", Description = "Clerical post in department", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Patwari", Description = "Land records officer", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Staff Nurse", Description = "Healthcare staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Pharmacist", Description = "Medicine dispenser", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Computer Assistant", Description = "IT Support role", CreatedOnUtc = DateTime.UtcNow },
                
                // Revenue
                new PostDM { PostName = "Naib Tehsildar", Description = "Revenue field officer", CreatedOnUtc = DateTime.UtcNow },
                
                // Health
                new PostDM { PostName = "Junior Pharmacist", Description = "Junior pharmacist role", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Lab Technician", Description = "Lab testing staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "MPHW", Description = "Multi Purpose Health Worker", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Nursing Aid", Description = "Nursing assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "ECG Technician", Description = "Electrocardiogram technician", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Lab Technician", Description = "Lab assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Health Inspector", Description = "Health inspector support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Dental Technician", Description = "Dental support technician", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Store Clerk", Description = "Store handling clerk", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "BCG Technician", Description = "BCG vaccine technician", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Dresser", Description = "Medical dresser role", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "CSSD Attendant", Description = "Central sterile services department", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Assistant Scientific Officer", Description = "Scientific support staff", CreatedOnUtc = DateTime.UtcNow },
                
                // Law and Justice
                new PostDM { PostName = "Assistant Law Officer", Description = "Law officer", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Legal Assistant", Description = "Legal assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Legal Assistant", Description = "Junior legal staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Reader", Description = "Court reader", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Urdu Typist", Description = "Urdu language typist", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Judgement Writer", Description = "Court judgement writer", CreatedOnUtc = DateTime.UtcNow },
                
                // Agriculture
                new PostDM { PostName = "Agriculture Extension Assistant", Description = "Agriculture assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Field Assistant", Description = "Field support staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Horticulture Assistant", Description = "Horticulture support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Sericulture Assistant", Description = "Silk industry support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Veterinary Assistant", Description = "Animal health assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Soil Assistant", Description = "Soil testing staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Soil Conservation Assistant", Description = "Soil conservation support", CreatedOnUtc = DateTime.UtcNow },
                
                // Education
                new PostDM { PostName = "Junior Librarian", Description = "Library staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Studio Assistant", Description = "Education studio support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Kitabat Instructor", Description = "Calligraphy instructor", CreatedOnUtc = DateTime.UtcNow },
                
                // Power Development
                new PostDM { PostName = "Junior Engineer (Electrical)", Description = "Electrical engineering role", CreatedOnUtc = DateTime.UtcNow },
                
                // Public Works
                new PostDM { PostName = "Junior Engineer (Civil)", Description = "Civil engineering role", CreatedOnUtc = DateTime.UtcNow },
                
                // Social Welfare
                new PostDM { PostName = "Supervisor", Description = "Supervision role", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Social Worker", Description = "Welfare support worker", CreatedOnUtc = DateTime.UtcNow },
                
                // Finance
                new PostDM { PostName = "Accounts Assistant", Description = "Accounts staff", CreatedOnUtc = DateTime.UtcNow },
                
                // Forest
                new PostDM { PostName = "Forester", Description = "Forest officer", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Wildlife Guard", Description = "Wildlife protection", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Forest Guard", Description = "Forest guard role", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Draftsman", Description = "Technical draftsman", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Assistant Information Officer", Description = "Information services support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Lab Assistant", Description = "Lab assistant", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Data Operator", Description = "Data entry role", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Scientist A", Description = "Research scientist", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Research Assistant", Description = "Research support staff", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Scientific Assistant", Description = "Junior science support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Junior Environment Engineer", Description = "Environment engineering support", CreatedOnUtc = DateTime.UtcNow },
                new PostDM { PostName = "Field Inspector", Description = "Field inspection officer", CreatedOnUtc = DateTime.UtcNow }
            };

                await _context.Posts.AddRangeAsync(posts);
                await _context.SaveChangesAsync();

                #endregion Posts

                #region Department Posts
                try
                {


                    var deptPosts = new[]
                    {
                new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Revenue").Id, PostId = posts.First(p => p.PostName == "Junior Assistant").Id, NotificationNumber = "REV-001", PostDate = DateTime.UtcNow },
                new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Revenue").Id, PostId = posts.First(p => p.PostName == "Patwari").Id, NotificationNumber = "REV-002", PostDate = DateTime.Now.AddMonths(6) },
                new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Revenue").Id, PostId = posts.First(p => p.PostName == "Naib Tehsildar").Id, NotificationNumber = "REV-003",PostDate = DateTime.Now.AddMonths(6)},
                new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Revenue").Id, PostId = posts.First(p => p.PostName == "Naib Tehsildar").Id, NotificationNumber = "REV-003",PostDate = DateTime.UtcNow},

               // ----------------- Health & Medical -----------------
               new DepartmentPostsDM{DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id,PostId = posts.First(p => p.PostName == "Staff Nurse").Id,NotificationNumber = "HLT-001",PostDate = DateTime.UtcNow},
               new DepartmentPostsDM{DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id,PostId = posts.First(p => p.PostName == "Pharmacist").Id,NotificationNumber = "HLT-002",PostDate = DateTime.UtcNow},
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Junior Pharmacist").Id, NotificationNumber = "HLT-003", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Lab Technician").Id, NotificationNumber = "HLT-004", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "MPHW").Id, NotificationNumber = "HLT-005", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Nursing Aid").Id, NotificationNumber = "HLT-006", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "ECG Technician").Id, NotificationNumber = "HLT-007",PostDate = DateTime.Now.AddMonths(6) },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Junior Lab Technician").Id, NotificationNumber = "HLT-008", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Junior Health Inspector").Id, NotificationNumber = "HLT-009", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Junior Dental Technician").Id, NotificationNumber = "HLT-010", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Junior Store Clerk").Id, NotificationNumber = "HLT-011", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "BCG Technician").Id, NotificationNumber = "HLT-012", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Dresser").Id, NotificationNumber = "HLT-013", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "CSSD Attendant").Id, NotificationNumber = "HLT-014", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Health & Medical").Id, PostId = posts.First(p => p.PostName == "Assistant Scientific Officer").Id, NotificationNumber = "HLT-015", PostDate = DateTime.UtcNow },
               
               // ----------------- Law and Justice -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Assistant Law Officer").Id, NotificationNumber = "LAW-001", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Legal Assistant").Id, NotificationNumber = "LAW-002", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Junior Legal Assistant").Id, NotificationNumber = "LAW-003", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Reader").Id, NotificationNumber = "LAW-004", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Urdu Typist").Id, NotificationNumber = "LAW-005", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Law and Justice").Id, PostId = posts.First(p => p.PostName == "Judgement Writer").Id, NotificationNumber = "LAW-006", PostDate = DateTime.Now.AddMonths(6) },
               
               // ----------------- Agriculture and Skill Development -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Agriculture Extension Assistant").Id, NotificationNumber = "AGR-001", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Field Assistant").Id, NotificationNumber = "AGR-002", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Horticulture Assistant").Id, NotificationNumber = "AGR-003", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Sericulture Assistant").Id, NotificationNumber = "AGR-004", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Veterinary Assistant").Id, NotificationNumber = "AGR-005", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Soil Assistant").Id, NotificationNumber = "AGR-006", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Agriculture and Skill Development").Id, PostId = posts.First(p => p.PostName == "Soil Conservation Assistant").Id, NotificationNumber = "AGR-007", PostDate = DateTime.UtcNow },
               
               // ----------------- Education Development -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Education Development").Id, PostId = posts.First(p => p.PostName == "Junior Librarian").Id, NotificationNumber = "EDU-001", PostDate = DateTime.Now.AddMonths(6) },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Education Development").Id, PostId = posts.First(p => p.PostName == "Studio Assistant").Id, NotificationNumber = "EDU-002", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Education Development").Id, PostId = posts.First(p => p.PostName == "Kitabat Instructor").Id, NotificationNumber = "EDU-003", PostDate = DateTime.UtcNow },
               
               // ----------------- Power Development -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Power Development").Id, PostId = posts.First(p => p.PostName == "Junior Engineer (Electrical)").Id, NotificationNumber = "PWR-001", PostDate = DateTime.UtcNow },
               
               // ----------------- Public Works (PWD) -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Public Works (PWD)").Id, PostId = posts.First(p => p.PostName == "Junior Engineer (Civil)").Id, NotificationNumber = "PWD-001", PostDate = DateTime.UtcNow },
               
               // ----------------- Social Welfare -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Social Welfare").Id, PostId = posts.First(p => p.PostName == "Supervisor").Id, NotificationNumber = "SW-001", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Social Welfare").Id, PostId = posts.First(p => p.PostName == "Social Worker").Id, NotificationNumber = "SW-002", PostDate = DateTime.UtcNow },
               
               // ----------------- Finance and Accounts -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Finance and Accounts").Id, PostId = posts.First(p => p.PostName == "Accounts Assistant").Id, NotificationNumber = "FIN-001", PostDate = DateTime.UtcNow },
               
               // ----------------- Forest and Environment -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Forester").Id, NotificationNumber = "FOR-001", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Wildlife Guard").Id, NotificationNumber = "FOR-002", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Forest Guard").Id, NotificationNumber = "FOR-003", PostDate = DateTime.Now.AddMonths(6)},
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Draftsman").Id, NotificationNumber = "FOR-004", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Assistant Information Officer").Id, NotificationNumber = "FOR-005", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Lab Assistant").Id, NotificationNumber = "FOR-006", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Data Operator").Id, NotificationNumber = "FOR-007", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Scientist A").Id, NotificationNumber = "FOR-008", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Research Assistant").Id, NotificationNumber = "FOR-009", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Junior Scientific Assistant").Id, NotificationNumber = "FOR-010", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Junior Environment Engineer").Id, NotificationNumber = "FOR-011", PostDate = DateTime.UtcNow },
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "Forest and Environment").Id, PostId = posts.First(p => p.PostName == "Field Inspector").Id, NotificationNumber = "FOR-012", PostDate = DateTime.UtcNow },
               
               // ----------------- IT -----------------
               new DepartmentPostsDM { DepartmentId = departments.First(d => d.DepartmentName == "IT").Id, PostId = posts.First(p => p.PostName == "Computer Assistant").Id, NotificationNumber = "IT-001", PostDate = DateTime.Now.AddMonths(6) }
};
                    await _context.DepartmentPosts.AddRangeAsync(deptPosts);
                    await _context.SaveChangesAsync();
                }
                catch (Exception ee)
                {
                    throw ee;
                }
                // await _context.SaveChangesAsync();

                #endregion Department Posts

                #region Subjects
                // -----------------------------
                // Subjects
                // -----------------------------
                var subjects = new[]
                {
                new SubjectDM { SubjectName = "Mathematics", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow },
                new SubjectDM { SubjectName = "General Knowledge", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow },
                new SubjectDM {SubjectName = "Reasoning", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "English", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Computer Awareness", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "polity", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Geography", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "History", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Science base", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Environment", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Economy", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Current Affairs", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Agriculture", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Biology", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},
                new SubjectDM {SubjectName = "Medicine", Description = "", CreatedBy = "Seeder", CreatedOnUtc = DateTime.UtcNow},

            };
                await _context.Subjects.AddRangeAsync(subjects);
                await _context.SaveChangesAsync();

                #endregion Subjects

                #region Post Subject

                var postSubjects = new[]
                {
                new SubjectPostDM { SubjectId = 1, PostId = 1 },
                new SubjectPostDM { SubjectId = 1, PostId = 2 },
                new SubjectPostDM { SubjectId = 1, PostId = 3 },
                new SubjectPostDM { SubjectId = 2, PostId = 1 },
                new SubjectPostDM { SubjectId = 2, PostId = 2 },
                new SubjectPostDM { SubjectId = 2, PostId = 3 },
                new SubjectPostDM { SubjectId = 3, PostId = 1 },
                new SubjectPostDM { SubjectId = 3, PostId = 2 },
                new SubjectPostDM { SubjectId = 3, PostId = 3 },
                new SubjectPostDM { SubjectId = 4, PostId = 1 },
                new SubjectPostDM { SubjectId = 4, PostId = 2 },
                new SubjectPostDM { SubjectId = 4, PostId = 3 },
                new SubjectPostDM { SubjectId = 4, PostId = 4 },
                new SubjectPostDM { SubjectId = 4, PostId = 5 },
            };

                await _context.SubjectPosts.AddRangeAsync(postSubjects);
                await _context.SaveChangesAsync();

                #endregion Post Subject

                /*#region MCQs

                var mcqs = new List<MCQsDM>
             {
                new(){
                    Question = "Who is the current Lieutenant Governor of Jammu & Kashmir (as of 2025)?",
                    OptionA = "Satya Pal Malik",
                    OptionB = "Manoj Sinha",
                    OptionC = "N. N. Vohra",
                    OptionD = "G. C. Murmu",
                    Answer = "Manoj Sinha",
                    Explanation = "Manoj Sinha has been serving as the Lieutenant Governor of J&K since August 2020.",
                    CreatedOnUtc =  DateTime.UtcNow,
                    CreatedBy = "seeder"
                },
                new(){
      Question = "Shortcut key to copy selected text in MS Word is?",
      OptionA = "Ctrl + V",
      OptionB = "Ctrl + C",
      OptionC = "Ctrl + X",
      OptionD = "Ctrl + Z",
      Answer = "Ctrl + C",
      Explanation = "Ctrl + C copies selected text to clipboard.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which is the summer capital of Jammu & Kashmir?",
      OptionA = "Jammu",
      OptionB = "Srinagar",
      OptionC = "Leh",
      OptionD = "Anantnag",
      Answer = "Srinagar",
      Explanation = "Srinagar serves as the summer capital of J&K, while Jammu is the winter capital.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "RAM is a type of:",
      OptionA = "Permanent Memory",
      OptionB = "Volatile Memory",
      OptionC = "Secondary Memory",
      OptionD = "Cache Memory",
      Answer = "Volatile Memory",
      Explanation = "RAM is volatile memory which loses data when power is off.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who wrote the national anthem of India?",
      OptionA = "Rabindranath Tagore",
      OptionB = "Bankim Chandra Chatterjee",
      OptionC = "Sarojini Naidu",
      OptionD = "Mahatma Gandhi",
      Answer = "Rabindranath Tagore",
      Explanation = "Rabindranath Tagore wrote 'Jana Gana Mana' which is the national anthem.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which river is known as the lifeline of Kashmir?",
      OptionA = "Jhelum",
      OptionB = "Chenab",
      OptionC = "Tawi",
      OptionD = "Sindh",
      Answer = "Jhelum",
      Explanation = "The Jhelum River is called the lifeline of Kashmir valley.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "In MS Excel, which symbol is used to start a formula?",
      OptionA = "#",
      OptionB = "=",
      OptionC = "+",
      OptionD = "*",
      Answer = "=",
      Explanation = "Formulas in Excel always begin with '='.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "The Dogra dynasty in J&K was founded by?",
      OptionA = "Ranbir Singh",
      OptionB = "Gulab Singh",
      OptionC = "Hari Singh",
      OptionD = "Amar Singh",
      Answer = "Gulab Singh",
      Explanation = "Gulab Singh founded the Dogra dynasty after the Treaty of Amritsar in 1846.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which one is NOT an input device?",
      OptionA = "Keyboard",
      OptionB = "Mouse",
      OptionC = "Printer",
      OptionD = "Scanner",
      Answer = "Printer",
      Explanation = "Printer is an output device, not input.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "What is the capital of Ladakh UT?",
      OptionA = "Kargil",
      OptionB = "Leh",
      OptionC = "Srinagar",
      OptionD = "Jammu",
      Answer = "Leh",
      Explanation = "Leh is the capital of Ladakh Union Territory.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who is known as the 'Father of Indian Constitution'?",
      OptionA = "Mahatma Gandhi",
      OptionB = "B. R. Ambedkar",
      OptionC = "Jawaharlal Nehru",
      OptionD = "Sardar Patel",
      Answer = "B. R. Ambedkar",
      Explanation = "Dr. B. R. Ambedkar was the chairman of the drafting committee of the Indian Constitution.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which keyboard shortcut is used to undo an action?",
      OptionA = "Ctrl + U",
      OptionB = "Ctrl + Z",
      OptionC = "Ctrl + Y",
      OptionD = "Ctrl + A",
      Answer = "Ctrl + Z",
      Explanation = "Ctrl + Z is used to undo the last action.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Tulip Garden in Srinagar is located on the foothills of?",
      OptionA = "Shankaracharya Hill",
      OptionB = "Hari Parbat",
      OptionC = "Zabarwan Hills",
      OptionD = "Pir Panjal",
      Answer = "Zabarwan Hills",
      Explanation = "Asia's largest Tulip Garden lies on the foothills of Zabarwan Hills.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who was the last ruling Maharaja of Jammu & Kashmir?",
      OptionA = "Ranbir Singh",
      OptionB = "Hari Singh",
      OptionC = "Pratap Singh",
      OptionD = "Gulab Singh",
      Answer = "Hari Singh",
      Explanation = "Maharaja Hari Singh was the last ruling monarch of J&K.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which gas is used by plants in photosynthesis?",
      OptionA = "Oxygen",
      OptionB = "Carbon dioxide",
      OptionC = "Nitrogen",
      OptionD = "Hydrogen",
      Answer = "Carbon dioxide",
      Explanation = "Plants use carbon dioxide and release oxygen during photosynthesis.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "In MS Word, 'Ctrl + S' is used for?",
      OptionA = "Save",
      OptionB = "Search",
      OptionC = "Select All",
      OptionD = "Spell Check",
      Answer = "Save",
      Explanation = "Ctrl + S saves the current document.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "What is the official language of Jammu & Kashmir?",
      OptionA = "Urdu",
      OptionB = "Kashmiri",
      OptionC = "Hindi",
      OptionD = "All of the above",
      Answer = "All of the above",
      Explanation = "The J&K Official Languages Act, 2020, includes Urdu, Kashmiri, Hindi, Dogri, and English.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which Mughal emperor built the Shalimar Garden in Srinagar?",
      OptionA = "Akbar",
      OptionB = "Jahangir",
      OptionC = "Shah Jahan",
      OptionD = "Aurangzeb",
      Answer = "Jahangir",
      Explanation = "Shalimar Bagh was built by Emperor Jahangir in 1619.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which part of computer performs calculation and comparison?",
      OptionA = "Memory Unit",
      OptionB = "ALU",
      OptionC = "CU",
      OptionD = "Storage",
      Answer = "ALU",
      Explanation = "Arithmetic Logic Unit (ALU) is responsible for arithmetic and logical operations.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "The Dachigam National Park in J&K is famous for?",
      OptionA = "Lion",
      OptionB = "Hangul Deer",
      OptionC = "Tiger",
      OptionD = "Elephant",
      Answer = "Hangul Deer",
      Explanation = "Dachigam National Park is known for the endangered Hangul Deer (Kashmir Stag).",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who maintains the record of rights (Jamabandi) in a village?",
      OptionA = "Patwari",
      OptionB = "Tehsildar",
      OptionC = "Naib Tehsildar",
      OptionD = "Collector",
      Answer = "Patwari",
      Explanation = "Patwari is responsible for maintaining land records such as Jamabandi.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "In Jammu & Kashmir, the land records are primarily maintained under which Act?",
      OptionA = "Indian Penal Code",
      OptionB = "Land Revenue Act",
      OptionC = "Registration Act",
      OptionD = "Transfer of Property Act",
      Answer = "Land Revenue Act",
      Explanation = "The J&K Land Revenue Act governs land records and related matters.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who is the administrative head of a Tehsil?",
      OptionA = "Patwari",
      OptionB = "Naib Tehsildar",
      OptionC = "Tehsildar",
      OptionD = "Collector",
      Answer = "Tehsildar",
      Explanation = "Tehsildar is the administrative head of a Tehsil.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which river flows through the Wular Lake?",
      OptionA = "Chenab",
      OptionB = "Tawi",
      OptionC = "Jhelum",
      OptionD = "Sindh",
      Answer = "Jhelum",
      Explanation = "The Jhelum River flows through Wular Lake in Kashmir.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "In MS Excel, which key is used to edit a cell?",
      OptionA = "F1",
      OptionB = "F2",
      OptionC = "F3",
      OptionD = "F4",
      Answer = "F2",
      Explanation = "Pressing F2 allows editing the content of an active cell.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Who was the last Dogra ruler of Jammu & Kashmir?",
      OptionA = "Ranbir Singh",
      OptionB = "Pratap Singh",
      OptionC = "Hari Singh",
      OptionD = "Gulab Singh",
      Answer = "Hari Singh",
      Explanation = "Maharaja Hari Singh was the last ruling Dogra monarch.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder",
    },
    new(){
      Question = "Shortcut key for 'Undo' in MS Word is?",
      OptionA = "Ctrl + Y",
      OptionB = "Ctrl + A",
      OptionC = "Ctrl + Z",
      OptionD = "Ctrl + S",
      Answer = "Ctrl + Z",
      Explanation = "Ctrl + Z is the undo command in MS Word.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which district of J&K is famous for saffron cultivation?",
      OptionA = "Pulwama",
      OptionB = "Baramulla",
      OptionC = "Kupwara",
      OptionD = "Udhampur",
      Answer = "Pulwama",
      Explanation = "Pulwama district, especially Pampore area, is famous for saffron.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which of the following is NOT a function of a Patwari?",
      OptionA = "Maintaining land records",
      OptionB = "Collecting land revenue",
      OptionC = "Issuing passports",
      OptionD = "Measuring agricultural land",
      Answer = "Issuing passports",
      Explanation = "Patwari is not authorized to issue passports.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "What does RTC stand for in land records?",
      OptionA = "Record of Tenancy and Crops",
      OptionB = "Revenue and Tax Certificate",
      OptionC = "Record of Transfer Cases",
      OptionD = "Registered Title Certificate",
      Answer = "Record of Tenancy and Crops",
      Explanation = "RTC is Record of Tenancy and Crops maintained by revenue officers.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which Mughal emperor built the Nishat Bagh in Srinagar?",
      OptionA = "Akbar",
      OptionB = "Jahangir",
      OptionC = "Shah Jahan",
      OptionD = "Aurangzeb",
      Answer = "Jahangir",
      Explanation = "Nishat Bagh was built by Asif Khan, brother of Nur Jahan, during Jahangir’s reign.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which device is known as the 'brain of the computer'?",
      OptionA = "Mouse",
      OptionB = "Monitor",
      OptionC = "CPU",
      OptionD = "Keyboard",
      Answer = "CPU",
      Explanation = "The Central Processing Unit (CPU) controls all operations of a computer.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Who is known as the 'Iron Man of India'?",
      OptionA = "Subhas Chandra Bose",
      OptionB = "Sardar Vallabhbhai Patel",
      OptionC = "Mahatma Gandhi",
      OptionD = "Jawaharlal Nehru",
      Answer = "Sardar Vallabhbhai Patel",
      Explanation = "Sardar Patel is called the Iron Man of India for unifying princely states.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In which year was Article 370 abrogated?",
      OptionA = "2017",
      OptionB = "2018",
      OptionC = "2019",
      OptionD = "2020",
      Answer = "2019",
      Explanation = "Article 370 was abrogated on August 5, 2019.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the full form of LAN?",
      OptionA = "Large Area Network",
      OptionB = "Local Area Network",
      OptionC = "Long Access Node",
      OptionD = "Line Area Network",
      Answer = "Local Area Network",
      Explanation = "LAN connects computers in a small geographical area such as office or school.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which animal is the state animal of Jammu & Kashmir?",
      OptionA = "Snow Leopard",
      OptionB = "Hangul Deer",
      OptionC = "Black Bear",
      OptionD = "Yak",
      Answer = "Hangul Deer",
      Explanation = "The Hangul, also called Kashmir Stag, is the state animal of J&K.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "In MS Word, which shortcut is used for 'Find'?",
      OptionA = "Ctrl + H",
      OptionB = "Ctrl + F",
      OptionC = "Ctrl + P",
      OptionD = "Ctrl + C",
      Answer = "Ctrl + F",
      Explanation = "Ctrl + F is used to open the Find dialog box in Word.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which crop is called the staple food of Kashmir?",
      OptionA = "Maize",
      OptionB = "Wheat",
      OptionC = "Rice",
      OptionD = "Barley",
      Answer = "Rice",
      Explanation = "Rice is the staple food of Kashmir valley.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which district is known as the 'Rice Bowl of Kashmir'?",
      OptionA = "Anantnag",
      OptionB = "Baramulla",
      OptionC = "Kulgam",
      OptionD = "Pulwama",
      Answer = "Anantnag",
      Explanation = "Anantnag is known as the Rice Bowl of Kashmir due to extensive paddy cultivation.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Who among the following was the first Governor of J&K after it became a Union Territory?",
      OptionA = "Manoj Sinha",
      OptionB = "Satya Pal Malik",
      OptionC = "G. C. Murmu",
      OptionD = "N. N. Vohra",
      Answer = "G. C. Murmu",
      Explanation = "G. C. Murmu was the first Lieutenant Governor of J&K UT (October 2019).",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vitamin is essential for blood clotting?",
      OptionA = "Vitamin A",
      OptionB = "Vitamin K",
      OptionC = "Vitamin D",
      OptionD = "Vitamin C",
      Answer = "Vitamin K",
      Explanation = "Vitamin K is required for synthesis of clotting factors in blood.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "The normal range of adult blood pressure is?",
      OptionA = "80/40 mmHg",
      OptionB = "100/60 mmHg",
      OptionC = "120/80 mmHg",
      OptionD = "140/100 mmHg",
      Answer = "120/80 mmHg",
      Explanation = "The average normal adult BP is 120/80 mmHg.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder",
    },
    new(){
      Question = "Which is the largest organ of the human body?",
      OptionA = "Liver",
      OptionB = "Heart",
      OptionC = "Skin",
      OptionD = "Lungs",
      Answer = "Skin",
      Explanation = "Skin is the largest organ and acts as a protective barrier.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is an isotonic IV fluid?",
      OptionA = "0.45% Normal Saline",
      OptionB = "0.9% Normal Saline",
      OptionC = "10% Dextrose",
      OptionD = "3% NaCl",
      Answer = "0.9% Normal Saline",
      Explanation = "0.9% Normal Saline is isotonic and commonly used for fluid replacement.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The universal donor blood group is?",
      OptionA = "A+",
      OptionB = "B+",
      OptionC = "O−",
      OptionD = "AB+",
      Answer = "O−",
      Explanation = "O negative is the universal donor as it lacks A, B, and Rh antigens.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder",
    },
    new(){
      Question = "Which part of the brain controls balance and coordination?",
      OptionA = "Cerebrum",
      OptionB = "Cerebellum",
      OptionC = "Medulla",
      OptionD = "Thalamus",
      Answer = "Cerebellum",
      Explanation = "Cerebellum coordinates voluntary movements and maintains balance.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder",
    },
    new(){
      Question = "Which injection route has the fastest absorption?",
      OptionA = "Oral",
      OptionB = "Intramuscular",
      OptionC = "Intravenous",
      OptionD = "Subcutaneous",
      Answer = "Intravenous",
      Explanation = "IV route directly delivers drug into bloodstream for fastest effect.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Normal respiratory rate in adults is?",
      OptionA = "8–12 breaths/min",
      OptionB = "12–20 breaths/min",
      OptionC = "20–28 breaths/min",
      OptionD = "30–40 breaths/min",
      Answer = "12–20 breaths/min",
      Explanation = "The normal adult respiratory rate is between 12–20 per minute.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which of the following is a symptom of hypoglycemia?",
      OptionA = "Increased thirst",
      OptionB = "Shaking and sweating",
      OptionC = "Frequent urination",
      OptionD = "Dry skin",
      Answer = "Shaking and sweating",
      Explanation = "Hypoglycemia commonly causes sweating, tremors, and dizziness.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The first heart sound 'lub' is produced due to?",
      OptionA = "Closure of semilunar valves",
      OptionB = "Closure of AV valves",
      OptionC = "Opening of AV valves",
      OptionD = "Opening of semilunar valves",
      Answer = "Closure of AV valves",
      Explanation = "The first heart sound is due to closure of tricuspid and mitral (AV) valves.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder",

    },
    new(){
      Question = "Infection control: Which solution is used for hand hygiene in hospitals?",
      OptionA = "Hydrogen Peroxide",
      OptionB = "Chlorhexidine",
      OptionC = "Formalin",
      OptionD = "Phenol",
      Answer = "Chlorhexidine",
      Explanation = "Chlorhexidine is widely used as an antiseptic for hand washing.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The normal value of hemoglobin in adult females is?",
      OptionA = "10–11 g/dl",
      OptionB = "12–16 g/dl",
      OptionC = "14–18 g/dl",
      OptionD = "8–9 g/dl",
      Answer = "12–16 g/dl",
      Explanation = "Normal Hb in females is 12–16 g/dl, lower than in males.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Florence Nightingale is associated with which war?",
      OptionA = "World War I",
      OptionB = "Crimean War",
      OptionC = "World War II",
      OptionD = "Boer War",
      Answer = "Crimean War",
      Explanation = "Florence Nightingale gained fame as 'The Lady with the Lamp' during the Crimean War.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vaccine is given at birth in India?",
      OptionA = "Polio (OPV-0)",
      OptionB = "BCG",
      OptionC = "Hepatitis B",
      OptionD = "All of the above",
      Answer = "All of the above",
      Explanation = "At birth: BCG, OPV-0, and Hepatitis B vaccines are given.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder",
    },
    new(){
      Question = "What is the normal pH of human blood?",
      OptionA = "6.8–7.0",
      OptionB = "7.35–7.45",
      OptionC = "7.8–8.0",
      OptionD = "6.0–6.5",
      Answer = "7.35–7.45",
      Explanation = "Normal arterial blood pH is slightly alkaline (7.35–7.45).",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is the vector of malaria?",
      OptionA = "Culex mosquito",
      OptionB = "Anopheles mosquito",
      OptionC = "Aedes mosquito",
      OptionD = "Sandfly",
      Answer = "Anopheles mosquito",
      Explanation = "Female Anopheles mosquito transmits malaria parasite (Plasmodium).",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In CPR, what is the ratio of chest compressions to rescue breaths for adults?",
      OptionA = "15:2",
      OptionB = "20:2",
      OptionC = "30:2",
      OptionD = "25:2",
      Answer = "30:2",
      Explanation = "According to AHA guidelines, 30 compressions followed by 2 breaths is used.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which district hospital in J&K is famous for bone and joint treatment?",
      OptionA = "Baramulla",
      OptionB = "Anantnag",
      OptionC = "Srinagar",
      OptionD = "Kupwara",
      Answer = "Srinagar",
      Explanation = "Bone and Joint Hospital, Srinagar, is well-known for orthopedic treatment.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which gas is used in medical anesthesia?",
      OptionA = "Oxygen",
      OptionB = "Nitrous Oxide",
      OptionC = "Carbon Dioxide",
      OptionD = "Helium",
      Answer = "Nitrous Oxide",
      Explanation = "Nitrous Oxide is commonly used as an anesthetic gas in surgeries.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which fruit is rich in iron and useful in anemia?",
      OptionA = "Apple",
      OptionB = "Banana",
      OptionC = "Orange",
      OptionD = "Papaya",
      Answer = "Apple",
      Explanation = "Apples are rich in iron and helpful for patients with anemia.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vitamin is also known as ascorbic acid?",
      OptionA = "Vitamin A",
      OptionB = "Vitamin B12",
      OptionC = "Vitamin C",
      OptionD = "Vitamin D",
      Answer = "Vitamin C",
      Explanation = "Vitamin C is also called ascorbic acid and is important for immunity and wound healing.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which route of drug administration has 100% bioavailability?",
      OptionA = "Oral",
      OptionB = "Intravenous",
      OptionC = "Intramuscular",
      OptionD = "Subcutaneous",
      Answer = "Intravenous",
      Explanation = "IV administration bypasses absorption and delivers the drug directly into systemic circulation.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is an example of an NSAID?",
      OptionA = "Paracetamol",
      OptionB = "Aspirin",
      OptionC = "Ciprofloxacin",
      OptionD = "Omeprazole",
      Answer = "Aspirin",
      Explanation = "Aspirin is a non-steroidal anti-inflammatory drug (NSAID).",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which schedule of Drugs and Cosmetics Act deals with prescription drugs in India?",
      OptionA = "Schedule G",
      OptionB = "Schedule H",
      OptionC = "Schedule K",
      OptionD = "Schedule X",
      Answer = "Schedule H",
      Explanation = "Schedule H drugs can only be sold by retail on the prescription of a registered medical practitioner.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "ORS (Oral Rehydration Solution) is mainly used in the treatment of?",
      OptionA = "Hypertension",
      OptionB = "Diarrhea",
      OptionC = "Asthma",
      OptionD = "Tuberculosis",
      Answer = "Diarrhea",
      Explanation = "ORS is used to replace fluids and electrolytes lost during diarrhea.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which organ is primarily responsible for drug metabolism?",
      OptionA = "Kidney",
      OptionB = "Liver",
      OptionC = "Stomach",
      OptionD = "Pancreas",
      Answer = "Liver",
      Explanation = "The liver contains enzymes (mainly cytochrome P450) responsible for drug metabolism.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which dosage form is designed for insertion into the rectum?",
      OptionA = "Tablet",
      OptionB = "Capsule",
      OptionC = "Suppository",
      OptionD = "Lozenge",
      Answer = "Suppository",
      Explanation = "Suppositories are solid dosage forms used rectally for local or systemic effects.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which drug is used as an anticoagulant?",
      OptionA = "Warfarin",
      OptionB = "Amoxicillin",
      OptionC = "Metformin",
      OptionD = "Atorvastatin",
      Answer = "Warfarin",
      Explanation = "Warfarin is a commonly used oral anticoagulant to prevent blood clots.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a controlled drug under Schedule X in India?",
      OptionA = "Diazepam",
      OptionB = "Chloramphenicol",
      OptionC = "Codeine",
      OptionD = "Phenobarbitone",
      Answer = "Diazepam",
      Explanation = "Drugs with high abuse potential like Diazepam fall under Schedule X.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of these is a proton pump inhibitor?",
      OptionA = "Ranitidine",
      OptionB = "Omeprazole",
      OptionC = "Metoprolol",
      OptionD = "Dexamethasone",
      Answer = "Omeprazole",
      Explanation = "Omeprazole inhibits proton pumps in the stomach, reducing acid secretion.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The antidote for morphine poisoning is?",
      OptionA = "Atropine",
      OptionB = "Naloxone",
      OptionC = "Flumazenil",
      OptionD = "Adrenaline",
      Answer = "Naloxone",
      Explanation = "Naloxone is an opioid receptor antagonist and is used as antidote for morphine/opioid overdose.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vitamin deficiency causes rickets?",
      OptionA = "Vitamin A",
      OptionB = "Vitamin B1",
      OptionC = "Vitamin D",
      OptionD = "Vitamin K",
      Answer = "Vitamin D",
      Explanation = "Vitamin D deficiency leads to rickets in children and osteomalacia in adults.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which one is a broad-spectrum antibiotic?",
      OptionA = "Penicillin G",
      OptionB = "Amoxicillin",
      OptionC = "Erythromycin",
      OptionD = "Ceftriaxone",
      Answer = "Amoxicillin",
      Explanation = "Amoxicillin is a broad-spectrum penicillin effective against both Gram-positive and Gram-negative bacteria.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The first-pass metabolism occurs mainly in?",
      OptionA = "Kidney",
      OptionB = "Stomach",
      OptionC = "Liver",
      OptionD = "Lungs",
      Answer = "Liver",
      Explanation = "Drugs absorbed orally undergo first-pass metabolism in the liver before entering systemic circulation.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a disinfectant commonly used in hospitals?",
      OptionA = "Chlorhexidine",
      OptionB = "Paracetamol",
      OptionC = "Ibuprofen",
      OptionD = "Diazepam",
      Answer = "Chlorhexidine",
      Explanation = "Chlorhexidine is widely used as an antiseptic and disinfectant.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which class of drugs is used in the treatment of hypertension?",
      OptionA = "Beta-blockers",
      OptionB = "NSAIDs",
      OptionC = "Antacids",
      OptionD = "Antifungals",
      Answer = "Beta-blockers",
      Explanation = "Beta-blockers reduce blood pressure by slowing the heart rate and reducing cardiac output.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which drug is used for emergency contraception?",
      OptionA = "Mifepristone",
      OptionB = "Levonorgestrel",
      OptionC = "Clomiphene",
      OptionD = "Oxytocin",
      Answer = "Levonorgestrel",
      Explanation = "Levonorgestrel is used as an emergency contraceptive pill within 72 hours of unprotected sex.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a side effect of aminoglycosides?",
      OptionA = "Nephrotoxicity",
      OptionB = "Constipation",
      OptionC = "Hypertension",
      OptionD = "Skin rash",
      Answer = "Nephrotoxicity",
      Explanation = "Aminoglycosides can cause nephrotoxicity and ototoxicity.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder",

    },
    new(){
      Question = "Insulin is administered by which route?",
      OptionA = "Oral",
      OptionB = "Subcutaneous",
      OptionC = "Intravenous",
      OptionD = "Rectal",
      Answer = "Subcutaneous",
      Explanation = "Insulin is usually given by subcutaneous injection for slow absorption.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which alkaloid is obtained from Cinchona bark?",
      OptionA = "Morphine",
      OptionB = "Quinine",
      OptionC = "Atropine",
      OptionD = "Reserpine",
      Answer = "Quinine",
      Explanation = "Quinine is an antimalarial alkaloid obtained from Cinchona bark.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which shortcut key is used to copy selected text in MS Word?",
      OptionA = "Ctrl + X",
      OptionB = "Ctrl + C",
      OptionC = "Ctrl + V",
      OptionD = "Ctrl + P",
      Answer = "Ctrl + C",
      Explanation = "Ctrl + C is the standard shortcut for copying selected content.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which device is used for printing documents?",
      OptionA = "Scanner",
      OptionB = "Printer",
      OptionC = "Monitor",
      OptionD = "Projector",
      Answer = "Printer",
      Explanation = "A printer produces a hard copy of digital documents.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In Excel, which function is used to calculate the average of numbers?",
      OptionA = "SUM()",
      OptionB = "COUNT()",
      OptionC = "AVERAGE()",
      OptionD = "ROUND()",
      Answer = "AVERAGE()",
      Explanation = "The AVERAGE() function calculates the arithmetic mean of values.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is an output device?",
      OptionA = "Keyboard",
      OptionB = "Mouse",
      OptionC = "Monitor",
      OptionD = "Scanner",
      Answer = "Monitor",
      Explanation = "Monitors display output from the computer.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The full form of URL is?",
      OptionA = "Uniform Resource Locator",
      OptionB = "Universal Resource Link",
      OptionC = "Unified Research Locator",
      OptionD = "Universal Reference Link",
      Answer = "Uniform Resource Locator",
      Explanation = "URL is the address of a resource on the internet.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which key is used to refresh a webpage in Windows?",
      OptionA = "F2",
      OptionB = "F5",
      OptionC = "F9",
      OptionD = "Ctrl + R",
      Answer = "F5",
      Explanation = "Pressing F5 refreshes or reloads the current page.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which one is an example of system software?",
      OptionA = "MS Word",
      OptionB = "Windows OS",
      OptionC = "Tally",
      OptionD = "Photoshop",
      Answer = "Windows OS",
      Explanation = "Operating systems like Windows are system software.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which command is used to clear the screen in MS-DOS?",
      OptionA = "CLS",
      OptionB = "DEL",
      OptionC = "DIR",
      OptionD = "EXIT",
      Answer = "CLS",
      Explanation = "The CLS command clears the screen in MS-DOS.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The smallest unit of data in a computer is?",
      OptionA = "Byte",
      OptionB = "Bit",
      OptionC = "Nibble",
      OptionD = "Word",
      Answer = "Bit",
      Explanation = "A bit (0 or 1) is the smallest unit of data.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In Excel, which symbol is used to start a formula?",
      OptionA = "#",
      OptionB = "@",
      OptionC = "=",
      OptionD = "$",
      Answer = "=",
      Explanation = "Every formula in Excel begins with an '=' sign.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which device is used to convert hard copy into digital format?",
      OptionA = "Printer",
      OptionB = "Monitor",
      OptionC = "Scanner",
      OptionD = "Projector",
      Answer = "Scanner",
      Explanation = "A scanner converts physical documents into digital form.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The shortcut key Ctrl + Z is used for?",
      OptionA = "Redo",
      OptionB = "Undo",
      OptionC = "Save",
      OptionD = "Paste",
      Answer = "Undo",
      Explanation = "Ctrl + Z undoes the last action.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of these is not an operating system?",
      OptionA = "Linux",
      OptionB = "Windows",
      OptionC = "MS Excel",
      OptionD = "MacOS",
      Answer = "MS Excel",
      Explanation = "MS Excel is an application software, not an OS.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In networking, LAN stands for?",
      OptionA = "Large Area Network",
      OptionB = "Local Area Network",
      OptionC = "Logical Access Network",
      OptionD = "Limited Access Node",
      Answer = "Local Area Network",
      Explanation = "LAN connects computers within a limited area like office or building.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which memory is volatile?",
      OptionA = "ROM",
      OptionB = "RAM",
      OptionC = "Hard Disk",
      OptionD = "Pen Drive",
      Answer = "RAM",
      Explanation = "RAM loses its data when power is turned off.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which function key is used to rename a file or folder in Windows?",
      OptionA = "F1",
      OptionB = "F2",
      OptionC = "F5",
      OptionD = "F10",
      Answer = "F2",
      Explanation = "Pressing F2 allows renaming files/folders.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which type of software is MS PowerPoint?",
      OptionA = "Spreadsheet",
      OptionB = "Word Processing",
      OptionC = "Presentation",
      OptionD = "Database",
      Answer = "Presentation",
      Explanation = "MS PowerPoint is used to create slide-based presentations.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of these is a web browser?",
      OptionA = "Google Chrome",
      OptionB = "MS Excel",
      OptionC = "MS Word",
      OptionD = "Adobe Photoshop",
      Answer = "Google Chrome",
      Explanation = "Google Chrome is a popular web browser.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which protocol is used to send emails?",
      OptionA = "HTTP",
      OptionB = "SMTP",
      OptionC = "FTP",
      OptionD = "IMAP",
      Answer = "SMTP",
      Explanation = "Simple Mail Transfer Protocol (SMTP) is used for sending emails.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is an example of cloud storage?",
      OptionA = "OneDrive",
      OptionB = "RAM",
      OptionC = "ROM",
      OptionD = "Cache",
      Answer = "OneDrive",
      Explanation = "OneDrive is an online cloud storage service by Microsoft.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Who was the first Dogra ruler of Jammu and Kashmir?",
      OptionA = "Maharaja Hari Singh",
      OptionB = "Maharaja Ranbir Singh",
      OptionC = "Maharaja Gulab Singh",
      OptionD = "Maharaja Pratap Singh",
      Answer = "Maharaja Gulab Singh",
      Explanation = "Maharaja Gulab Singh founded the Dogra dynasty after the Treaty of Amritsar in 1846.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The term 'Mutation' in Revenue records refers to?",
      OptionA = "Change in ownership of land",
      OptionB = "Soil fertility test",
      OptionC = "Measurement of land",
      OptionD = "Change in land use",
      Answer = "Change in ownership of land",
      Explanation = "Mutation is the process of updating revenue records when ownership of land changes.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which article of the Indian Constitution deals with the Directive Principles of State Policy?",
      OptionA = "Article 32",
      OptionB = "Article 51",
      OptionC = "Articles 36 to 51",
      OptionD = "Article 21",
      Answer = "Articles 36 to 51",
      Explanation = "Directive Principles of State Policy are covered under Articles 36 to 51 of the Constitution.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which Mughal emperor built the Shalimar Bagh in Srinagar?",
      OptionA = "Akbar",
      OptionB = "Aurangzeb",
      OptionC = "Jahangir",
      OptionD = "Shah Jahan",
      Answer = "Jahangir",
      Explanation = "Jahangir built Shalimar Garden in Srinagar for his wife Nur Jahan.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which river is known as 'Vitasta' in ancient texts?",
      OptionA = "Chenab",
      OptionB = "Jhelum",
      OptionC = "Indus",
      OptionD = "Ravi",
      Answer = "Jhelum",
      Explanation = "Jhelum river was called Vitasta in ancient Sanskrit texts.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The headquarters of the Survey and Settlement Department in J&K is located at?",
      OptionA = "Jammu",
      OptionB = "Srinagar",
      OptionC = "Anantnag",
      OptionD = "Udhampur",
      Answer = "Jammu",
      Explanation = "The Survey and Settlement Department headquarters is situated at Jammu.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which Indian leader is known as the 'Iron Man of India'?",
      OptionA = "Mahatma Gandhi",
      OptionB = "Subhash Chandra Bose",
      OptionC = "Sardar Vallabhbhai Patel",
      OptionD = "Jawaharlal Nehru",
      Answer = "Sardar Vallabhbhai Patel",
      Explanation = "Sardar Patel played a crucial role in the integration of princely states.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which gas is most responsible for global warming?",
      OptionA = "Oxygen",
      OptionB = "Carbon Dioxide",
      OptionC = "Nitrogen",
      OptionD = "Helium",
      Answer = "Carbon Dioxide",
      Explanation = "Carbon dioxide is the primary greenhouse gas causing global warming.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The instrument used for measuring land area in traditional revenue records is?",
      OptionA = "Theodolite",
      OptionB = "Gunter’s chain",
      OptionC = "Compass",
      OptionD = "Altimeter",
      Answer = "Gunter’s chain",
      Explanation = "Gunter’s chain has been traditionally used for land measurements in India.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "In which year was Jammu and Kashmir Reorganization Act passed?",
      OptionA = "2018",
      OptionB = "2019",
      OptionC = "2020",
      OptionD = "2021",
      Answer = "2019",
      Explanation = "The J&K Reorganization Act, 2019 reorganized the state into two Union Territories.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Who is the custodian of land records in a Tehsil?",
      OptionA = "Patwari",
      OptionB = "Tehsildar",
      OptionC = "Naib Tehsildar",
      OptionD = "Collector",
      Answer = "Patwari",
      Explanation = "The Patwari maintains and updates land revenue records at village level.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which lake in Kashmir is famous for floating gardens?",
      OptionA = "Mansar Lake",
      OptionB = "Dal Lake",
      OptionC = "Wular Lake",
      OptionD = "Manasbal Lake",
      Answer = "Dal Lake",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The official language of J&K as per the Jammu and Kashmir Official Languages Act, 2020 is?",
      OptionA = "Urdu",
      OptionB = "English",
      OptionC = "Hindi",
      OptionD = "All of the above",
      Answer = "All of the above",
      Explanation = "Urdu, English, Hindi, Kashmiri, and Dogri were given official language status.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which article of the Indian Constitution guarantees equality before law?",
      OptionA = "Article 14",
      OptionB = "Article 19",
      OptionC = "Article 21",
      OptionD = "Article 32",
      Answer = "Article 14",
      Explanation = "Article 14 provides equality before law and equal protection of laws.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which district of J&K is known as the 'Rice Bowl of Kashmir'?",
      OptionA = "Pulwama",
      OptionB = "Kupwara",
      OptionC = "Baramulla",
      OptionD = "Budgam",
      Answer = "Pulwama",
      Explanation = "Pulwama district is famous for rice cultivation and saffron fields.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which international boundary line passes through J&K?",
      OptionA = "Radcliffe Line",
      OptionB = "Durand Line",
      OptionC = "Line of Control",
      OptionD = "McMohan Line",
      Answer = "Line of Control",
      Explanation = "The Line of Control separates the Indian-administered and Pakistan-administered areas of J&K.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which Governor of J&K later became the Vice President of India?",
      OptionA = "Karan Singh",
      OptionB = "G. S. Pathak",
      OptionC = "Krishan Kant",
      OptionD = "B. K. Nehru",
      Answer = "Krishan Kant",
      Explanation = "Krishan Kant served as Governor of J&K before becoming Vice President of India.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which part of the Constitution of India deals with Panchayati Raj?",
      OptionA = "Part IX",
      OptionB = "Part X",
      OptionC = "Part XI",
      OptionD = "Part XII",
      Answer = "Part IX",
      Explanation = "Part IX of the Constitution deals with Panchayati Raj institutions.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The land revenue collected from peasants during Mughal period was called?",
      OptionA = "Jizya",
      OptionB = "Zakat",
      OptionC = "Lagaan",
      OptionD = "Kharaj",
      Answer = "Lagaan",
      Explanation = "Lagaan was the land revenue tax collected during the Mughal period.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which body conducts the Naib Tehsildar exam in Jammu and Kashmir?",
      OptionA = "UPSC",
      OptionB = "JKPSC",
      OptionC = "JKSSB",
      OptionD = "SSC",
      Answer = "JKSSB",
      Explanation = "JKSSB (Jammu and Kashmir Services Selection Board) conducts the Naib Tehsildar exam.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which schedule of the Drugs and Cosmetics Act deals with the list of prescription drugs?",
      OptionA = "Schedule H",
      OptionB = "Schedule J",
      OptionC = "Schedule G",
      OptionD = "Schedule M",
      Answer = "Schedule H",
      Explanation = "Schedule H lists prescription drugs that cannot be sold without a valid prescription.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal storage temperature for vaccines in a pharmacy?",
      OptionA = "0°C to 2°C",
      OptionB = "2°C to 8°C",
      OptionC = "10°C to 15°C",
      OptionD = "15°C to 25°C",
      Answer = "2°C to 8°C",
      Explanation = "Vaccines are stored in the cold chain between 2°C and 8°C.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The antidote for morphine poisoning is:",
      OptionA = "Atropine",
      OptionB = "Naloxone",
      OptionC = "Flumazenil",
      OptionD = "Adrenaline",
      Answer = "Naloxone",
      Explanation = "Naloxone is an opioid antagonist used to reverse morphine and other opioid toxicity.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "ORS is mainly used in the treatment of:",
      OptionA = "Hypertension",
      OptionB = "Diarrhea",
      OptionC = "Asthma",
      OptionD = "Tuberculosis",
      Answer = "Diarrhea",
      Explanation = "ORS (Oral Rehydration Solution) is used to prevent dehydration in diarrhea.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is an example of a broad-spectrum antibiotic?",
      OptionA = "Amoxicillin",
      OptionB = "Isoniazid",
      OptionC = "Rifampicin",
      OptionD = "Pyrazinamide",
      Answer = "Amoxicillin",
      Explanation = "Amoxicillin acts against both gram-positive and gram-negative bacteria.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which route of drug administration provides 100% bioavailability?",
      OptionA = "Oral",
      OptionB = "Intravenous",
      OptionC = "Subcutaneous",
      OptionD = "Inhalation",
      Answer = "Intravenous",
      Explanation = "Intravenous (IV) administration bypasses absorption barriers and ensures complete bioavailability.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which drug is commonly known as a 'blood thinner'?",
      OptionA = "Paracetamol",
      OptionB = "Aspirin",
      OptionC = "Metformin",
      OptionD = "Omeprazole",
      Answer = "Aspirin",
      Explanation = "Aspirin inhibits platelet aggregation and is used as an antiplatelet agent.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The pH of normal human blood is:",
      OptionA = "6.8",
      OptionB = "7.0",
      OptionC = "7.4",
      OptionD = "7.8",
      Answer = "7.4",
      Explanation = "The normal blood pH is tightly regulated at around 7.35–7.45.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which part of the kidney is primarily responsible for filtration?",
      OptionA = "Loop of Henle",
      OptionB = "Glomerulus",
      OptionC = "Collecting duct",
      OptionD = "Proximal tubule",
      Answer = "Glomerulus",
      Explanation = "The glomerulus filters blood to form the primary filtrate in urine formation.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which mineral is essential for hemoglobin formation?",
      OptionA = "Calcium",
      OptionB = "Iron",
      OptionC = "Zinc",
      OptionD = "Magnesium",
      Answer = "Iron",
      Explanation = "Iron is a critical component of hemoglobin, enabling oxygen transport.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which dosage form is designed for absorption through the oral mucosa?",
      OptionA = "Tablet",
      OptionB = "Capsule",
      OptionC = "Lozenge",
      OptionD = "Syrup",
      Answer = "Lozenge",
      Explanation = "Lozenges dissolve slowly in the mouth and allow drug absorption through mucosa.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Insulin is administered through which route?",
      OptionA = "Oral",
      OptionB = "Intramuscular",
      OptionC = "Subcutaneous",
      OptionD = "Rectal",
      Answer = "Subcutaneous",
      Explanation = "Insulin is usually given via the subcutaneous route for controlled absorption.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which drug is used in the treatment of tuberculosis?",
      OptionA = "Isoniazid",
      OptionB = "Ciprofloxacin",
      OptionC = "Erythromycin",
      OptionD = "Amphotericin B",
      Answer = "Isoniazid",
      Explanation = "Isoniazid is one of the first-line anti-tuberculosis drugs.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"

    },
    new(){
      Question = "Which class of drugs is used to reduce fever?",
      OptionA = "Antacids",
      OptionB = "Antipyretics",
      OptionC = "Antibiotics",
      OptionD = "Antihypertensives",
      Answer = "Antipyretics",
      Explanation = "Antipyretics such as paracetamol reduce fever by acting on the hypothalamus.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a proton pump inhibitor (PPI)?",
      OptionA = "Omeprazole",
      OptionB = "Ranitidine",
      OptionC = "Sucralfate",
      OptionD = "Misoprostol",
      Answer = "Omeprazole",
      Explanation = "Omeprazole is a PPI used to reduce gastric acid secretion.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which part of the brain controls respiration?",
      OptionA = "Cerebrum",
      OptionB = "Medulla oblongata",
      OptionC = "Cerebellum",
      OptionD = "Thalamus",
      Answer = "Medulla oblongata",
      Explanation = "The medulla oblongata regulates vital functions like breathing and heartbeat.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the full form of BCG vaccine?",
      OptionA = "Bacillus Calmette-Guerin",
      OptionB = "Bacterial Cell Growth",
      OptionC = "Biological Cell Guard",
      OptionD = "Bacillus Capsule Growth",
      Answer = "Bacillus Calmette-Guerin",
      Explanation = "BCG vaccine protects against tuberculosis and is derived from a live attenuated strain.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is an example of a controlled drug under the NDPS Act?",
      OptionA = "Paracetamol",
      OptionB = "Codeine",
      OptionC = "Ranitidine",
      OptionD = "Vitamin C",
      Answer = "Codeine",
      Explanation = "Codeine is a narcotic drug regulated under the NDPS Act due to its addictive potential.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which anticoagulant is commonly used in blood collection tubes for complete blood count (CBC)?",
      OptionA = "Sodium fluoride",
      OptionB = "EDTA",
      OptionC = "Heparin",
      OptionD = "Sodium citrate",
      Answer = "EDTA",
      Explanation = "EDTA prevents clotting by chelating calcium and is preferred for hematology tests.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which stain is used in Gram staining technique?",
      OptionA = "Methylene blue",
      OptionB = "Crystal violet",
      OptionC = "Safranin",
      OptionD = "Eosin",
      Answer = "Crystal violet",
      Explanation = "Crystal violet is the primary stain in Gram staining that differentiates Gram-positive and Gram-negative bacteria.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The normal range of hemoglobin in adult males is:",
      OptionA = "9–11 g/dL",
      OptionB = "11–13 g/dL",
      OptionC = "13–17 g/dL",
      OptionD = "18–20 g/dL",
      Answer = "13–17 g/dL",
      Explanation = "Normal hemoglobin in adult males is around 13–17 g/dL.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Widal test is performed for the diagnosis of:",
      OptionA = "Malaria",
      OptionB = "Tuberculosis",
      OptionC = "Typhoid",
      OptionD = "Hepatitis",
      Answer = "Typhoid",
      Explanation = "Widal test detects antibodies against Salmonella typhi in typhoid fever.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which instrument is used to separate blood plasma from cells?",
      OptionA = "Spectrophotometer",
      OptionB = "Centrifuge",
      OptionC = "Microscope",
      OptionD = "Incubator",
      Answer = "Centrifuge",
      Explanation = "A centrifuge separates components of blood by spinning at high speed.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Ziehl-Neelsen staining is used for detection of:",
      OptionA = "Fungi",
      OptionB = "Tubercle bacilli",
      OptionC = "Gram-negative bacteria",
      OptionD = "Parasites",
      Answer = "Tubercle bacilli",
      Explanation = "Ziehl-Neelsen stain is an acid-fast stain used to identify Mycobacterium tuberculosis.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which blood group is considered the universal donor?",
      OptionA = "AB+",
      OptionB = "O-",
      OptionC = "A+",
      OptionD = "B-",
      Answer = "O-",
      Explanation = "O negative blood can be given to any blood group, hence called universal donor.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The normal fasting blood glucose level in adults is:",
      OptionA = "50–70 mg/dL",
      OptionB = "70–100 mg/dL",
      OptionC = "110–140 mg/dL",
      OptionD = "140–200 mg/dL",
      Answer = "70–100 mg/dL",
      Explanation = "Fasting blood glucose is normally between 70–100 mg/dL in healthy adults.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which hormone is measured in pregnancy tests?",
      OptionA = "FSH",
      OptionB = "LH",
      OptionC = "hCG",
      OptionD = "TSH",
      Answer = "hCG",
      Explanation = "Pregnancy tests detect human chorionic gonadotropin (hCG) in urine or blood.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which type of microscope is commonly used in pathology labs?",
      OptionA = "Electron microscope",
      OptionB = "Compound microscope",
      OptionC = "Dissecting microscope",
      OptionD = "Dark field microscope",
      Answer = "Compound microscope",
      Explanation = "Compound microscopes are widely used in labs to study stained biological specimens.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which stain is used to identify malaria parasites in blood smears?",
      OptionA = "Leishman stain",
      OptionB = "Gram stain",
      OptionC = "Safranin",
      OptionD = "Giemsa stain",
      Answer = "Giemsa stain",
      Explanation = "Giemsa stain highlights malaria parasites in peripheral blood smears.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The ESR (Erythrocyte Sedimentation Rate) test is used to detect:",
      OptionA = "Anemia",
      OptionB = "Inflammation",
      OptionC = "Leukemia",
      OptionD = "Malaria",
      Answer = "Inflammation",
      Explanation = "ESR is a nonspecific test that indicates inflammation in the body.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which test is used to check liver function?",
      OptionA = "Blood urea test",
      OptionB = "LFT",
      OptionC = "RFT",
      OptionD = "CBC",
      Answer = "LFT",
      Explanation = "Liver Function Test (LFT) measures enzymes like ALT, AST, and bilirubin.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which blood component is essential for clotting?",
      OptionA = "Plasma",
      OptionB = "Platelets",
      OptionC = "RBCs",
      OptionD = "WBCs",
      Answer = "Platelets",
      Explanation = "Platelets release factors that initiate the blood clotting process.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "The normal pH of urine is:",
      OptionA = "3.5–4.5",
      OptionB = "4.5–6.5",
      OptionC = "6.5–8.5",
      OptionD = "7.5–9.0",
      Answer = "4.5–6.5",
      Explanation = "Urine is usually slightly acidic with pH around 4.5–6.5.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which test is used to measure kidney function?",
      OptionA = "LFT",
      OptionB = "RFT",
      OptionC = "CBC",
      OptionD = "ESR",
      Answer = "RFT",
      Explanation = "Renal Function Test (RFT) includes creatinine and urea levels to assess kidney function.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Blood grouping is based on which antigen system?",
      OptionA = "Rh system",
      OptionB = "MNS system",
      OptionC = "ABO system",
      OptionD = "Kell system",
      Answer = "ABO system",
      Explanation = "ABO blood grouping is based on the presence of A and B antigens on RBCs.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which chemical is used to disinfect laboratory surfaces?",
      OptionA = "Formalin",
      OptionB = "Phenol",
      OptionC = "Chlorine solution",
      OptionD = "All of the above",
      Answer = "All of the above",
      Explanation = "Disinfectants like formalin, phenol, and chlorine are commonly used in labs.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the full form of MPHW?",
      OptionA = "Multi Professional Health Worker",
      OptionB = "Multi Purpose Health Worker",
      OptionC = "Medical Public Health Worker",
      OptionD = "Medical Primary Health Worker",
      Answer = "Multi Purpose Health Worker",
      Explanation = "MPHW stands for Multi Purpose Health Worker, who provides community-based health services.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a responsibility of an MPHW?",
      OptionA = "Providing surgical treatment",
      OptionB = "Conducting immunization programs",
      OptionC = "Performing radiological tests",
      OptionD = "Issuing medicines independently",
      Answer = "Conducting immunization programs",
      Explanation = "MPHWs are involved in immunization, maternal-child health, and preventive health services.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vitamin deficiency causes Night Blindness?",
      OptionA = "Vitamin A",
      OptionB = "Vitamin B1",
      OptionC = "Vitamin C",
      OptionD = "Vitamin D",
      Answer = "Vitamin A",
      Explanation = "Deficiency of Vitamin A leads to Night Blindness and Xerophthalmia.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal pulse rate of a healthy adult?",
      OptionA = "40–60 beats/min",
      OptionB = "60–100 beats/min",
      OptionC = "100–120 beats/min",
      OptionD = "30–50 beats/min",
      Answer = "60–100 beats/min",
      Explanation = "The normal adult pulse rate is 60–100 beats per minute.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is the causative organism of Tuberculosis?",
      OptionA = "Mycobacterium leprae",
      OptionB = "Mycobacterium tuberculosis",
      OptionC = "Clostridium tetani",
      OptionD = "Treponema pallidum",
      Answer = "Mycobacterium tuberculosis",
      Explanation = "Tuberculosis is caused by Mycobacterium tuberculosis.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the incubation period of measles?",
      OptionA = "1–3 days",
      OptionB = "7–14 days",
      OptionC = "14–21 days",
      OptionD = "2–4 weeks",
      Answer = "7–14 days",
      Explanation = "The incubation period of measles is around 10 days, ranging from 7–14 days.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which contraceptive method provides protection against HIV/AIDS?",
      OptionA = "Copper-T",
      OptionB = "Condom",
      OptionC = "Oral Pills",
      OptionD = "Injectables",
      Answer = "Condom",
      Explanation = "Condoms prevent both pregnancy and sexually transmitted diseases including HIV/AIDS.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which vaccine is given at birth?",
      OptionA = "BCG",
      OptionB = "DPT",
      OptionC = "OPV",
      OptionD = "MMR",
      Answer = "BCG",
      Explanation = "BCG vaccine is given at birth to protect against Tuberculosis.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal blood pressure of a healthy adult?",
      OptionA = "90/60 mmHg",
      OptionB = "120/80 mmHg",
      OptionC = "140/100 mmHg",
      OptionD = "100/50 mmHg",
      Answer = "120/80 mmHg",
      Explanation = "The average normal blood pressure is 120/80 mmHg.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which disease is known as 'White Plague'?",
      OptionA = "Leprosy",
      OptionB = "Tuberculosis",
      OptionC = "Malaria",
      OptionD = "Polio",
      Answer = "Tuberculosis",
      Explanation = "Tuberculosis was historically known as 'White Plague'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Polio is caused by which type of organism?",
      OptionA = "Bacteria",
      OptionB = "Virus",
      OptionC = "Protozoa",
      OptionD = "Fungus",
      Answer = "Virus",
      Explanation = "Polio is caused by Poliovirus, a type of enterovirus.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is the first aid for snake bite?",
      OptionA = "Cutting the wound",
      OptionB = "Applying tight tourniquet",
      OptionC = "Immobilization and shifting to hospital",
      OptionD = "Applying herbal paste",
      Answer = "Immobilization and shifting to hospital",
      Explanation = "First aid includes immobilizing the limb and taking the patient to hospital without delay.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is a waterborne disease?",
      OptionA = "Cholera",
      OptionB = "Tuberculosis",
      OptionC = "Measles",
      OptionD = "Tetanus",
      Answer = "Cholera",
      Explanation = "Cholera spreads through contaminated water and food.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which test is used to detect pregnancy?",
      OptionA = "ELISA",
      OptionB = "Widal test",
      OptionC = "Urine hCG test",
      OptionD = "Mantoux test",
      Answer = "Urine hCG test",
      Explanation = "Urine test detects the presence of human chorionic gonadotropin (hCG) to confirm pregnancy.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Iron deficiency in diet causes:",
      OptionA = "Goiter",
      OptionB = "Anemia",
      OptionC = "Rickets",
      OptionD = "Scurvy",
      Answer = "Anemia",
      Explanation = "Iron deficiency reduces hemoglobin levels, leading to anemia.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which organ is affected in Hepatitis?",
      OptionA = "Kidney",
      OptionB = "Liver",
      OptionC = "Heart",
      OptionD = "Lungs",
      Answer = "Liver",
      Explanation = "Hepatitis is inflammation of the liver caused by viral infections.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which of the following is a permanent contraceptive method?",
      OptionA = "Oral pills",
      OptionB = "Copper-T",
      OptionC = "Tubectomy",
      OptionD = "Condom",
      Answer = "Tubectomy",
      Explanation = "Tubectomy (in females) and Vasectomy (in males) are permanent contraceptive methods.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is a zoonotic disease?",
      OptionA = "Tuberculosis",
      OptionB = "Rabies",
      OptionC = "Measles",
      OptionD = "Polio",
      Answer = "Rabies",
      Explanation = "Rabies is transmitted from animals to humans, hence zoonotic.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "How many bones are present in the adult human body?",
      OptionA = "206",
      OptionB = "208",
      OptionC = "210",
      OptionD = "212",
      Answer = "206",
      Explanation = "An adult human body contains 206 bones.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the primary role of a Nursing Aid?",
      OptionA = "Performing surgeries",
      OptionB = "Assisting nurses in patient care",
      OptionC = "Prescribing medicines",
      OptionD = "Diagnosing diseases",
      Answer = "Assisting nurses in patient care",
      Explanation = "Nursing Aids assist registered nurses in basic patient care like feeding, bathing, and mobility support.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal oral body temperature of a healthy adult?",
      OptionA = "96.4°F",
      OptionB = "98.6°F",
      OptionC = "100.4°F",
      OptionD = "97.0°F",
      Answer = "98.6°F",
      Explanation = "The average normal oral temperature is 98.6°F (37°C).",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which position is used for unconscious patients to prevent aspiration?",
      OptionA = "Prone",
      OptionB = "Supine",
      OptionC = "Lateral",
      OptionD = "Fowler’s",
      Answer = "Lateral",
      Explanation = "Unconscious patients are placed in lateral position to prevent aspiration of secretions.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is the correct sequence for hand washing?",
      OptionA = "Palm, wrist, fingers, nails",
      OptionB = "Wrist, palm, fingers, nails",
      OptionC = "Nails, palm, fingers, wrist",
      OptionD = "Palm, nails, wrist, fingers",
      Answer = "Palm, wrist, fingers, nails",
      Explanation = "Hand washing should be done systematically covering palm, wrist, fingers, and nails.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which nutrient is known as body-building food?",
      OptionA = "Carbohydrates",
      OptionB = "Proteins",
      OptionC = "Fats",
      OptionD = "Vitamins",
      Answer = "Proteins",
      Explanation = "Proteins help in growth, repair, and building of body tissues.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which device is used to measure blood pressure?",
      OptionA = "Thermometer",
      OptionB = "Sphygmomanometer",
      OptionC = "Stethoscope",
      OptionD = "Glucometer",
      Answer = "Sphygmomanometer",
      Explanation = "Blood pressure is measured with a sphygmomanometer.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the immediate first aid for a burn injury?",
      OptionA = "Apply butter",
      OptionB = "Apply ice directly",
      OptionC = "Pour cool running water",
      OptionD = "Cover with cotton",
      Answer = "Pour cool running water",
      Explanation = "Cool water should be used immediately to reduce skin damage in burn cases.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which bed is prepared for a surgical patient returning from OT?",
      OptionA = "Closed bed",
      OptionB = "Open bed",
      OptionC = "Operation bed",
      OptionD = "Post-operative bed",
      Answer = "Post-operative bed",
      Explanation = "A post-operative bed is arranged for patients after surgery for easy transfer and observation.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal respiratory rate of an adult?",
      OptionA = "10–12 breaths/min",
      OptionB = "12–20 breaths/min",
      OptionC = "20–25 breaths/min",
      OptionD = "25–30 breaths/min",
      Answer = "12–20 breaths/min",
      Explanation = "The normal respiratory rate in adults is 12–20 breaths per minute.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "How should a thermometer be cleaned after use?",
      OptionA = "With soap and water only",
      OptionB = "With alcohol swab",
      OptionC = "By boiling only",
      OptionD = "By wiping with dry cloth",
      Answer = "With alcohol swab",
      Explanation = "Clinical thermometers should be disinfected using an alcohol swab.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which is the universal precaution for infection control?",
      OptionA = "Washing hands frequently",
      OptionB = "Wearing gloves only",
      OptionC = "Sterilizing all instruments",
      OptionD = "Avoiding contact with patients",
      Answer = "Washing hands frequently",
      Explanation = "Hand hygiene is the most important universal precaution against infection.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the normal urine output of an adult per day?",
      OptionA = "200–400 ml",
      OptionB = "500–800 ml",
      OptionC = "1000–1500 ml",
      OptionD = "2500–3000 ml",
      Answer = "1000–1500 ml",
      Explanation = "Normal adult urine output is around 1–1.5 liters per day.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What should be done first in case of a fainting patient?",
      OptionA = "Give water immediately",
      OptionB = "Loosen tight clothing and elevate legs",
      OptionC = "Apply strong smell to nose",
      OptionD = "Start CPR",
      Answer = "Loosen tight clothing and elevate legs",
      Explanation = "To restore circulation, clothing should be loosened and legs raised in fainting.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which solution is commonly used for sterilizing instruments?",
      OptionA = "Phenol",
      OptionB = "Lysol",
      OptionC = "Savlon",
      OptionD = "Glutaraldehyde",
      Answer = "Glutaraldehyde",
      Explanation = "Glutaraldehyde is widely used for sterilizing medical instruments.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which deficiency disease is caused by lack of Vitamin C?",
      OptionA = "Rickets",
      OptionB = "Scurvy",
      OptionC = "Anemia",
      OptionD = "Goiter",
      Answer = "Scurvy",
      Explanation = "Vitamin C deficiency leads to scurvy, characterized by bleeding gums and poor wound healing.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the purpose of Fowler’s position?",
      OptionA = "For lumbar puncture",
      OptionB = "For patients with breathing difficulty",
      OptionC = "For post-surgery recovery",
      OptionD = "For unconscious patients",
      Answer = "For patients with breathing difficulty",
      Explanation = "Fowler’s position improves chest expansion and helps patients with respiratory distress.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What should be monitored when giving oxygen therapy?",
      OptionA = "Skin color and respiratory rate",
      OptionB = "Hair growth",
      OptionC = "Nail length",
      OptionD = "Body weight",
      Answer = "Skin color and respiratory rate",
      Explanation = "Oxygen therapy effectiveness is checked by monitoring skin color and breathing pattern.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which route is used for administering suppositories?",
      OptionA = "Oral",
      OptionB = "Rectal",
      OptionC = "Topical",
      OptionD = "Intravenous",
      Answer = "Rectal",
      Explanation = "Suppositories are usually given through the rectal route for quick absorption.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "Which type of bed sore prevention is used for bedridden patients?",
      OptionA = "Changing position frequently",
      OptionB = "Massaging pressure points with oil",
      OptionC = "Avoiding water intake",
      OptionD = "Giving antibiotics",
      Answer = "Changing position frequently",
      Explanation = "Frequent position change prevents pressure ulcers in bedridden patients.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the first step in CPR (Cardiopulmonary Resuscitation)?",
      OptionA = "Rescue breathing",
      OptionB = "Check responsiveness and call for help",
      OptionC = "Start chest compressions",
      OptionD = "Check pulse immediately",
      Answer = "Check responsiveness and call for help",
      Explanation = "The first step in CPR is to check if the patient is responsive and call for help.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy = "seeder"
    },
    new(){
      Question = "What is the value of 7 × 8?",
      OptionA = "54",
      OptionB = "56",
      OptionC = "64",
      OptionD = "72",
      Answer = "56",
      Explanation = "7 multiplied by 8 equals 56.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is 12 ÷ 3?",
      OptionA = "3",
      OptionB = "4",
      OptionC = "5",
      OptionD = "6",
      Answer = "4",
      Explanation = "12 divided by 3 equals 4.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the square root of 81?",
      OptionA = "9",
      OptionB = "8",
      OptionC = "7",
      OptionD = "6",
      Answer = "9",
      Explanation = "√81 = 9.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Simplify: 15 – 6 ÷ 3",
      OptionA = "3",
      OptionB = "13",
      OptionC = "17",
      OptionD = "11",
      Answer = "13",
      Explanation = "According to BODMAS: 6 ÷ 3 = 2, then 15 – 2 = 13.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is 25% of 200?",
      OptionA = "25",
      OptionB = "50",
      OptionC = "75",
      OptionD = "100",
      Answer = "50",
      Explanation = "25% of 200 = (25/100) × 200 = 50.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Solve: 3² + 4²",
      OptionA = "12",
      OptionB = "25",
      OptionC = "18",
      OptionD = "20",
      Answer = "25",
      Explanation = "3² + 4² = 9 + 16 = 25.",
      CreatedOnUtc =DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the perimeter of a square with side 6 cm?",
      OptionA = "18 cm",
      OptionB = "24 cm",
      OptionC = "30 cm",
      OptionD = "36 cm",
      Answer = "24 cm",
      Explanation = "Perimeter = 4 × side = 4 × 6 = 24 cm.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If a = 5, b = 3, find a² – b².",
      OptionA = "16",
      OptionB = "20",
      OptionC = "25",
      OptionD = "30",
      Answer = "16",
      Explanation = "a² – b² = 25 – 9 = 16.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the next prime number after 7?",
      OptionA = "9",
      OptionB = "10",
      OptionC = "11",
      OptionD = "13",
      Answer = "11",
      Explanation = "The prime numbers after 7 are 11, 13, 17…",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the value of π (up to 2 decimal places)?",
      OptionA = "3.12",
      OptionB = "3.14",
      OptionC = "3.15",
      OptionD = "3.16",
      Answer = "3.14",
      Explanation = "π ≈ 3.14.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If the radius of a circle is 7 cm, what is its diameter?",
      OptionA = "7 cm",
      OptionB = "14 cm",
      OptionC = "21 cm",
      OptionD = "28 cm",
      Answer = "14 cm",
      Explanation = "Diameter = 2 × radius = 14 cm.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is 0.75 expressed as a fraction?",
      OptionA = "1/2",
      OptionB = "3/4",
      OptionC = "2/3",
      OptionD = "4/5",
      Answer = "3/4",
      Explanation = "0.75 = 75/100 = 3/4.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Solve: 2x = 10. Find x.",
      OptionA = "2",
      OptionB = "3",
      OptionC = "4",
      OptionD = "5",
      Answer = "5",
      Explanation = "Divide both sides by 2 → x = 5.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the area of a triangle with base 10 cm and height 8 cm.",
      OptionA = "40 cm²",
      OptionB = "60 cm²",
      OptionC = "80 cm²",
      OptionD = "100 cm²",
      Answer = "40 cm²",
      Explanation = "Area = 1/2 × base × height = 1/2 × 10 × 8 = 40 cm².",
      CreatedOnUtc =DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the HCF of 12 and 18?",
      OptionA = "2",
      OptionB = "3",
      OptionC = "6",
      OptionD = "9",
      Answer = "6",
      Explanation = "12 = 2 × 2 × 3, 18 = 2 × 3 × 3 → HCF = 6.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the LCM of 4 and 6?",
      OptionA = "8",
      OptionB = "10",
      OptionC = "12",
      OptionD = "24",
      Answer = "12",
      Explanation = "Multiples of 4: 4,8,12… Multiples of 6: 6,12… LCM = 12.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder",
    },
    new(){
      Question = "If x = 2, evaluate 3x² + 4x + 5.",
      OptionA = "15",
      OptionB = "21",
      OptionC = "25",
      OptionD = "29",
      Answer = "25",
      Explanation = "3(2²) + 4(2) + 5 = 12 + 8 + 5 = 25.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the sum of the first 10 natural numbers?",
      OptionA = "45",
      OptionB = "50",
      OptionC = "55",
      OptionD = "60",
      Answer = "55",
      Explanation = "Sum = n(n+1)/2 = 10×11/2 = 55.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Convert 3/5 into percentage.",
      OptionA = "50%",
      OptionB = "55%",
      OptionC = "60%",
      OptionD = "65%",
      Answer = "60%",
      Explanation = "3/5 = 0.6 = 60%.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the value of 2³ × 3².",
      OptionA = "18",
      OptionB = "24",
      OptionC = "36",
      OptionD = "72",
      Answer = "72",
      Explanation = "2³ × 3² = 8 × 9 = 72.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the largest continent in the world?",
      OptionA = "Africa",
      OptionB = "Asia",
      OptionC = "Europe",
      OptionD = "North America",
      Answer = "Asia",
      Explanation = "Asia is the largest continent by both area and population.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who is known as the Father of the Nation in India?",
      OptionA = "Subhas Chandra Bose",
      OptionB = "Mahatma Gandhi",
      OptionC = "Jawaharlal Nehru",
      OptionD = "Bhagat Singh",
      Answer = "Mahatma Gandhi",
      Explanation = "Mahatma Gandhi led India's non-violent freedom movement.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which planet is known as the Red Planet?",
      OptionA = "Venus",
      OptionB = "Mars",
      OptionC = "Jupiter",
      OptionD = "Mercury",
      Answer = "Mars",
      Explanation = "Mars appears red due to iron oxide on its surface.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who invented the light bulb?",
      OptionA = "Nikola Tesla",
      OptionB = "Thomas Edison",
      OptionC = "Alexander Graham Bell",
      OptionD = "Albert Einstein",
      Answer = "Thomas Edison",
      Explanation = "Thomas Edison is credited with inventing the practical light bulb.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "What is the capital city of Australia?",
      OptionA = "Sydney",
      OptionB = "Melbourne",
      OptionC = "Canberra",
      OptionD = "Perth",
      Answer = "Canberra",
      Explanation = "Canberra was chosen as the capital of Australia in 1908.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the largest ocean in the world?",
      OptionA = "Atlantic Ocean",
      OptionB = "Indian Ocean",
      OptionC = "Arctic Ocean",
      OptionD = "Pacific Ocean",
      Answer = "Pacific Ocean",
      Explanation = "The Pacific Ocean is the largest and deepest ocean.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder",
    },
    new(){
      Question = "Which is the national flower of India?",
      OptionA = "Rose",
      OptionB = "Lotus",
      OptionC = "Lily",
      OptionD = "Sunflower",
      Answer = "Lotus",
      Explanation = "The Lotus is India's national flower symbolizing purity.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who was the first man to walk on the moon?",
      OptionA = "Yuri Gagarin",
      OptionB = "Buzz Aldrin",
      OptionC = "Neil Armstrong",
      OptionD = "Michael Collins",
      Answer = "Neil Armstrong",
      Explanation = "Neil Armstrong stepped on the moon in 1969 during Apollo 11.",
      CreatedOnUtc =DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the smallest planet in our solar system?",
      OptionA = "Mars",
      OptionB = "Mercury",
      OptionC = "Venus",
      OptionD = "Pluto",
      Answer = "Mercury",
      Explanation = "Mercury is the smallest planet by diameter and mass.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the national animal of India?",
      OptionA = "Elephant",
      OptionB = "Bengal Tiger",
      OptionC = "Lion",
      OptionD = "Leopard",
      Answer = "Bengal Tiger",
      Explanation = "The Bengal Tiger is the national animal of India.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which gas do humans inhale to survive?",
      OptionA = "Carbon Dioxide",
      OptionB = "Oxygen",
      OptionC = "Nitrogen",
      OptionD = "Hydrogen",
      Answer = "Oxygen",
      Explanation = "Humans need oxygen for respiration.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who is the current United Nations Secretary-General (2025)?",
      OptionA = "Kofi Annan",
      OptionB = "Ban Ki-moon",
      OptionC = "António Guterres",
      OptionD = "Boutros Boutros-Ghali",
      Answer = "António Guterres",
      Explanation = "António Guterres has been UN Secretary-General since 2017.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which country is known as the Land of the Rising Sun?",
      OptionA = "China",
      OptionB = "Japan",
      OptionC = "Thailand",
      OptionD = "Korea",
      Answer = "Japan",
      Explanation = "Japan is called the Land of the Rising Sun.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the longest river in the world?",
      OptionA = "Amazon",
      OptionB = "Nile",
      OptionC = "Yangtze",
      OptionD = "Mississippi",
      Answer = "Nile",
      Explanation = "The Nile is traditionally considered the longest river, though Amazon is close.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who is called the Missile Man of India?",
      OptionA = "Vikram Sarabhai",
      OptionB = "Homi Bhabha",
      OptionC = "A.P.J. Abdul Kalam",
      OptionD = "Satish Dhawan",
      Answer = "A.P.J. Abdul Kalam",
      Explanation = "Dr. A.P.J. Abdul Kalam is known as the Missile Man of India.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "In which year did India gain independence?",
      OptionA = "1945",
      OptionB = "1947",
      OptionC = "1950",
      OptionD = "1952",
      Answer = "1947",
      Explanation = "India gained independence from British rule on 15th August 1947.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the tallest mountain in the world?",
      OptionA = "K2",
      OptionB = "Mount Everest",
      OptionC = "Kangchenjunga",
      OptionD = "Makalu",
      Answer = "Mount Everest",
      Explanation = "Mount Everest is the tallest mountain with a height of 8,849 m.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which country gifted the Statue of Liberty to the USA?",
      OptionA = "Germany",
      OptionB = "France",
      OptionC = "UK",
      OptionD = "Italy",
      Answer = "France",
      Explanation = "France gifted the Statue of Liberty to the USA in 1886.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Who is the author of 'Harry Potter'?",
      OptionA = "J.K. Rowling",
      OptionB = "Charles Dickens",
      OptionC = "William Shakespeare",
      OptionD = "Mark Twain",
      Answer = "J.K. Rowling",
      Explanation = "J.K. Rowling wrote the Harry Potter book series.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If A is the brother of B and B is the sister of C, how is A related to C?",
      OptionA = "Brother",
      OptionB = "Sister",
      OptionC = "Cousin",
      OptionD = "Cannot be determined",
      Answer = "Brother",
      Explanation = "If A is brother of B and B is sister of C, then A is also brother of C.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the odd one out: 2, 4, 8, 16, 34, 64",
      OptionA = "4",
      OptionB = "16",
      OptionC = "34",
      OptionD = "64",
      Answer = "34",
      Explanation = "All others are powers of 2 except 34.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If CAT is coded as DBU, how is DOG coded?",
      OptionA = "DPP",
      OptionB = "EPH",
      OptionC = "DPH",
      OptionD = "EPI",
      Answer = "EPH",
      Explanation = "Each letter is shifted by +1: C→D, A→B, T→U; so DOG → EPH.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the missing term: 5, 10, 20, 40, ?",
      OptionA = "50",
      OptionB = "60",
      OptionC = "80",
      OptionD = "100",
      Answer = "80",
      Explanation = "Each number is multiplied by 2; next is 40 × 2 = 80.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "A is taller than B but shorter than C. D is shorter than B. Who is the tallest?",
      OptionA = "A",
      OptionB = "B",
      OptionC = "C",
      OptionD = "D",
      Answer = "C",
      Explanation = "C is taller than A, and A is taller than B and D, so C is tallest.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Pointing to a woman, a man says: 'She is the daughter of my grandfather’s only son.' How is the woman related to the man?",
      OptionA = "Mother",
      OptionB = "Sister",
      OptionC = "Cousin",
      OptionD = "Aunt",
      Answer = "Sister",
      Explanation = "Grandfather’s only son is the man’s father; hence, the woman is his sister.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Complete the series: A, C, E, G, ?",
      OptionA = "H",
      OptionB = "I",
      OptionC = "J",
      OptionD = "K",
      Answer = "I",
      Explanation = "Skipping one letter each time: A, C, E, G, I.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the odd one out: Square, Circle, Triangle, Rectangle",
      OptionA = "Square",
      OptionB = "Circle",
      OptionC = "Triangle",
      OptionD = "Rectangle",
      Answer = "Circle",
      Explanation = "All others are polygons; circle is not.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If 2 = 6, 3 = 12, 4 = 20, then 5 = ?",
      OptionA = "25",
      OptionB = "30",
      OptionC = "35",
      OptionD = "40",
      Answer = "30",
      Explanation = "Pattern: n × (n+1); for 5 → 5×6 = 30.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Arrange in logical order: 1. Seed 2. Plant 3. Flower 4. Fruit",
      OptionA = "1,2,3,4",
      OptionB = "2,1,3,4",
      OptionC = "1,3,2,4",
      OptionD = "2,3,4,1",
      Answer = "1,2,3,4",
      Explanation = "The growth cycle is Seed → Plant → Flower → Fruit.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If TODAY is coded as VQFCB, how is HELLO coded?",
      OptionA = "JGNNQ",
      OptionB = "IGOMP",
      OptionC = "IFMMP",
      OptionD = "JHNNP",
      Answer = "JGNNQ",
      Explanation = "Each letter is shifted by +2: T→V, O→Q, D→F, etc.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which number will come next: 1, 4, 9, 16, ?",
      OptionA = "20",
      OptionB = "24",
      OptionC = "25",
      OptionD = "30",
      Answer = "25",
      Explanation = "These are perfect squares: 1², 2², 3², 4² → next is 5² = 25.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which is the odd one out: Apple, Mango, Carrot, Orange",
      OptionA = "Apple",
      OptionB = "Mango",
      OptionC = "Carrot",
      OptionD = "Orange",
      Answer = "Carrot",
      Explanation = "All others are fruits; carrot is a vegetable.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If ALL = 25, BAT = 43, then CAT = ?",
      OptionA = "44",
      OptionB = "46",
      OptionC = "48",
      OptionD = "50",
      Answer = "46",
      Explanation = "Add alphabetical positions: C(3)+A(1)+T(20)=24; double = 48.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Find the missing number: 7, 14, 28, 56, ?",
      OptionA = "64",
      OptionB = "98",
      OptionC = "112",
      OptionD = "120",
      Answer = "112",
      Explanation = "Each term is multiplied by 2; 56×2=112.",
      CreatedOnUtc =DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "If SOUTH is written as HTUOS, how is NORTH written?",
      OptionA = "HTRON",
      OptionB = "HTRON",
      OptionC = "HTRON",
      OptionD = "HTRON",
      Answer = "HTRON",
      Explanation = "It is reverse order coding.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Complete the series: 2, 6, 12, 20, ?",
      OptionA = "28",
      OptionB = "30",
      OptionC = "32",
      OptionD = "36",
      Answer = "30",
      Explanation = "Pattern is n(n+1): 2, 6, 12, 20 → next 30.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Which word cannot be formed from the letters of 'TRANSPARENT'?",
      OptionA = "SPARE",
      OptionB = "TRAIN",
      OptionC = "PARENT",
      OptionD = "NEARBY",
      Answer = "NEARBY",
      Explanation = "Letter 'B' is not in 'TRANSPARENT'.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Arrange in logical order: 1. Birth 2. Death 3. School 4. Childhood 5. Old Age",
      OptionA = "1,4,3,5,2",
      OptionB = "1,3,4,5,2",
      OptionC = "1,4,5,3,2",
      OptionD = "1,5,4,3,2",
      Answer = "1,4,3,5,2",
      Explanation = "Life order: Birth → Childhood → School → Old Age → Death.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Happy'.",
      OptionA = "Sad",
      OptionB = "Joyful",
      OptionC = "Angry",
      OptionD = "Tired",
      Answer = "Joyful",
      Explanation = "The synonym of 'Happy' is 'Joyful'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Strong'.",
      OptionA = "Weak",
      OptionB = "Powerful",
      OptionC = "Sturdy",
      OptionD = "Solid",
      Answer = "Weak",
      Explanation = "The opposite of 'Strong' is 'Weak'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: He _____ to school every day.",
      OptionA = "go",
      OptionB = "goes",
      OptionC = "going",
      OptionD = "gone",
      Answer = "goes",
      Explanation = "Singular subject 'He' requires 'goes'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the correctly spelled word.",
      OptionA = "Recieve",
      OptionB = "Receive",
      OptionC = "Receeve",
      OptionD = "Receiv",
      Answer = "Receive",
      Explanation = "Correct spelling is 'Receive' (i before e except after c).",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Brave'.",
      OptionA = "Cowardly",
      OptionB = "Fearless",
      OptionC = "Weak",
      OptionD = "Afraid",
      Answer = "Fearless",
      Explanation = "The synonym of 'Brave' is 'Fearless'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Polite'.",
      OptionA = "Gentle",
      OptionB = "Rude",
      OptionC = "Kind",
      OptionD = "Soft",
      Answer = "Rude",
      Explanation = "The opposite of 'Polite' is 'Rude'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: The sun _____ in the east.",
      OptionA = "rise",
      OptionB = "rises",
      OptionC = "rising",
      OptionD = "rose",
      Answer = "rises",
      Explanation = "Correct tense is 'rises'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Quick'.",
      OptionA = "Slow",
      OptionB = "Fast",
      OptionC = "Lazy",
      OptionD = "Calm",
      Answer = "Fast",
      Explanation = "The synonym of 'Quick' is 'Fast'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Hot'.",
      OptionA = "Warm",
      OptionB = "Cold",
      OptionC = "Cool",
      OptionD = "Mild",
      Answer = "Cold",
      Explanation = "The opposite of 'Hot' is 'Cold'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: She has been _____ for two hours.",
      OptionA = "study",
      OptionB = "studying",
      OptionC = "studies",
      OptionD = "studied",
      Answer = "studying",
      Explanation = "Present perfect continuous tense requires 'studying'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Angry'.",
      OptionA = "Happy",
      OptionB = "Calm",
      OptionC = "Furious",
      OptionD = "Joyful",
      Answer = "Furious",
      Explanation = "The synonym of 'Happy' is 'Joyful'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Light'.",
      OptionA = "Heavy",
      OptionB = "Bright",
      OptionC = "Shiny",
      OptionD = "Soft",
      Answer = "Heavy",
      Explanation = "The opposite of 'Light' (weight) is 'Heavy'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: I _____ a letter yesterday.",
      OptionA = "write",
      OptionB = "wrote",
      OptionC = "written",
      OptionD = "writes",
      Answer = "wrote",
      Explanation = "Past tense of 'write' is 'wrote'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Intelligent'.",
      OptionA = "Clever",
      OptionB = "Dull",
      OptionC = "Slow",
      OptionD = "Lazy",
      Answer = "Clever",
      Explanation = "The synonym of 'Intelligent' is 'Clever'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Rich'.",
      OptionA = "Wealthy",
      OptionB = "Poor",
      OptionC = "Prosperous",
      OptionD = "Affluent",
      Answer = "Poor",
      Explanation = "The opposite of 'Rich' is 'Poor'.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: They _____ to the market now.",
      OptionA = "go",
      OptionB = "going",
      OptionC = "are going",
      OptionD = "goes",
      Answer = "are going",
      Explanation = "Present continuous tense requires 'are going'.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the synonym of 'Beautiful'.",
      OptionA = "Ugly",
      OptionB = "Pretty",
      OptionC = "Dirty",
      OptionD = "Plain",
      Answer = "Pretty",
      Explanation = "The synonym of 'Beautiful' is 'Pretty'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Choose the antonym of 'Begin'.",
      OptionA = "Start",
      OptionB = "End",
      OptionC = "Open",
      OptionD = "Commence",
      Answer = "End",
      Explanation = "The opposite of 'Begin' is 'End'.",
      CreatedOnUtc = DateTime.UtcNow,
      CreatedBy =  "seeder"
    },
    new(){
      Question = "Fill in the blank: The train _____ at 5 pm tomorrow.",
      OptionA = "leave",
      OptionB = "leaving",
      OptionC = "leaves",
      OptionD = "left",
      Answer = "leaves",
      Explanation = "Future scheduled events use simple present tense → 'leaves'.",
      CreatedOnUtc =  DateTime.UtcNow,
      CreatedBy =  "seeder"

    },
     new(){
  Question = "Who was the first President of India?",
  OptionA = "Mahatma Gandhi",
  OptionB = "Jawaharlal Nehru",
  OptionC = "Dr. Rajendra Prasad",
  OptionD = "Sardar Patel",
  Answer = "Dr. Rajendra Prasad",
  Explanation = "Dr. Rajendra Prasad was the first President of India, serving from 1950 to 1962.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which is the largest planet in our Solar System?",
  OptionA = "Earth",
  OptionB = "Mars",
  OptionC = "Jupiter",
  OptionD = "Saturn",
  Answer = "Jupiter",
  Explanation = "Jupiter is the largest planet in our Solar System.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the national currency of Japan?",
  OptionA = "Yuan",
  OptionB = "Yen",
  OptionC = "Won",
  OptionD = "Ringgit",
  Answer = "Yen",
  Explanation = "The Japanese currency is called Yen (JPY).",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which river is known as the 'Sorrow of Bihar'?",
  OptionA = "Ganga",
  OptionB = "Kosi",
  OptionC = "Yamuna",
  OptionD = "Son",
  Answer = "Kosi",
  Explanation = "Kosi River is called the 'Sorrow of Bihar' because of its frequent floods.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Who discovered the sea route to India?",
  OptionA = "Christopher Columbus",
  OptionB = "Vasco da Gama",
  OptionC = "Ferdinand Magellan",
  OptionD = "Marco Polo",
  Answer = "Vasco da Gama",
  Explanation = "Vasco da Gama discovered the sea route to India in 1498.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which country is known as the 'Land of Rising Sun'?",
  OptionA = "China",
  OptionB = "Japan",
  OptionC = "Korea",
  OptionD = "Thailand",
  Answer = "Japan",
  Explanation = "Japan is called the 'Land of Rising Sun' because it is located east of the Asian continent.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "In which year did India become a republic?",
  OptionA = "1947",
  OptionB = "1948",
  OptionC = "1950",
  OptionD = "1952",
  Answer = "1950",
  Explanation = "India became a republic on 26th January 1950.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which planet is known as the 'Red Planet'?",
  OptionA = "Mercury",
  OptionB = "Venus",
  OptionC = "Mars",
  OptionD = "Jupiter",
  Answer = "Mars",
  Explanation = "Mars appears red due to iron oxide on its surface.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Who wrote the Indian National Anthem?",
  OptionA = "Bankim Chandra Chatterjee",
  OptionB = "Rabindranath Tagore",
  OptionC = "Sarojini Naidu",
  OptionD = "Subhash Chandra Bose",
  Answer = "Rabindranath Tagore",
  Explanation = "Rabindranath Tagore wrote 'Jana Gana Mana', the Indian National Anthem.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the capital of Australia?",
  OptionA = "Sydney",
  OptionB = "Melbourne",
  OptionC = "Canberra",
  OptionD = "Brisbane",
  Answer = "Canberra",
  Explanation = "Canberra is the capital city of Australia.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which metal is used to make the filament of an electric bulb?",
  OptionA = "Copper",
  OptionB = "Iron",
  OptionC = "Tungsten",
  OptionD = "Silver",
  Answer = "Tungsten",
  Explanation = "Tungsten has a high melting point and is used in bulb filaments.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which city is known as the 'Pink City' of India?",
  OptionA = "Udaipur",
  OptionB = "Jaipur",
  OptionC = "Jodhpur",
  OptionD = "Agra",
  Answer = "Jaipur",
  Explanation = "Jaipur is called the 'Pink City' due to its pink-colored buildings.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Who was the first woman Prime Minister of India?",
  OptionA = "Indira Gandhi",
  OptionB = "Sarojini Naidu",
  OptionC = "Pratibha Patil",
  OptionD = "Sushma Swaraj",
  Answer = "Indira Gandhi",
  Explanation = "Indira Gandhi became the first woman Prime Minister of India in 1966.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the national animal of India?",
  OptionA = "Lion",
  OptionB = "Elephant",
  OptionC = "Tiger",
  OptionD = "Leopard",
  Answer = "Tiger",
  Explanation = "The Bengal Tiger is the national animal of India.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which planet is closest to the Sun?",
  OptionA = "Venus",
  OptionB = "Mercury",
  OptionC = "Earth",
  OptionD = "Mars",
  Answer = "Mercury",
  Explanation = "Mercury is the closest planet to the Sun.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Who invented the telephone?",
  OptionA = "Alexander Graham Bell",
  OptionB = "Thomas Edison",
  OptionC = "James Watt",
  OptionD = "Isaac Newton",
  Answer = "Alexander Graham Bell",
  Explanation = "Alexander Graham Bell invented the telephone in 1876.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which Indian city is known as the 'City of Joy'?",
  OptionA = "Mumbai",
  OptionB = "Kolkata",
  OptionC = "Chennai",
  OptionD = "Delhi",
  Answer = "Kolkata",
  Explanation = "Kolkata is often called the 'City of Joy'.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which gas do plants absorb during photosynthesis?",
  OptionA = "Oxygen",
  OptionB = "Carbon dioxide",
  OptionC = "Nitrogen",
  OptionD = "Hydrogen",
  Answer = "Carbon dioxide",
  Explanation = "Plants absorb carbon dioxide to prepare food through photosynthesis.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the national flower of India?",
  OptionA = "Rose",
  OptionB = "Sunflower",
  OptionC = "Lotus",
  OptionD = "Jasmine",
  Answer = "Lotus",
  Explanation = "Lotus is the national flower of India.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Who was known as the 'Iron Man of India'?",
  OptionA = "Mahatma Gandhi",
  OptionB = "Sardar Vallabhbhai Patel",
  OptionC = "Bhagat Singh",
  OptionD = "Jawaharlal Nehru",
  Answer = "Sardar Vallabhbhai Patel",
  Explanation = "Sardar Vallabhbhai Patel was known as the 'Iron Man of India' for uniting the princely states.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What does the 'Ctrl + P' shortcut key do in most applications?",
  OptionA = "Paste the content",
  OptionB = "Print the document",
  OptionC = "Preview the document",
  OptionD = "Power off the computer",
  Answer = "Print the document",
  Explanation = "Ctrl + P is the shortcut key used to print a document.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which device is used to convert digital signals into analog signals?",
  OptionA = "Router",
  OptionB = "Modem",
  OptionC = "Switch",
  OptionD = "Repeater",
  Answer = "Modem",
  Explanation = "A modem converts digital data into analog signals and vice versa for communication.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the main function of the Control Unit (CU) in CPU?",
  OptionA = "Store data permanently",
  OptionB = "Perform arithmetic operations",
  OptionC = "Control and coordinate all operations",
  OptionD = "Connect CPU with peripherals",
  Answer = "Control and coordinate all operations",
  Explanation = "The CU directs the flow of data and instructions in the CPU.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following is an example of an optical storage device?",
  OptionA = "Pen Drive",
  OptionB = "CD-ROM",
  OptionC = "Hard Disk",
  OptionD = "RAM",
  Answer = "CD-ROM",
  Explanation = "CD-ROM uses optical laser technology to read and write data.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which among the following is not a web browser?",
  OptionA = "Mozilla Firefox",
  OptionB = "Opera",
  OptionC = "Google Chrome",
  OptionD = "MS Word",
  Answer = "MS Word",
  Explanation = "MS Word is a word processor, not a web browser.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What does SMTP stand for?",
  OptionA = "Simple Mail Transfer Protocol",
  OptionB = "Standard Message Transfer Program",
  OptionC = "Secure Mail Text Protocol",
  OptionD = "Simple Message Transfer Program",
  Answer = "Simple Mail Transfer Protocol",
  Explanation = "SMTP is used for sending emails between servers.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which device is used to project images onto a large screen?",
  OptionA = "Scanner",
  OptionB = "Projector",
  OptionC = "Monitor",
  OptionD = "Plotter",
  Answer = "Projector",
  Explanation = "A projector displays computer output on a big screen for viewing.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "The smallest unit of information that a computer can process is called?",
  OptionA = "Byte",
  OptionB = "Bit",
  OptionC = "Word",
  OptionD = "Character",
  Answer = "Bit",
  Explanation = "A bit is the smallest data unit, representing either 0 or 1.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which memory is used to store data temporarily while working?",
  OptionA = "ROM",
  OptionB = "RAM",
  OptionC = "Cache",
  OptionD = "CD",
  Answer = "RAM",
  Explanation = "RAM stores data temporarily during program execution.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What does 'Ctrl + X' do in most applications?",
  OptionA = "Copy",
  OptionB = "Cut",
  OptionC = "Paste",
  OptionD = "Undo",
  Answer = "Cut",
  Explanation = "Ctrl + X cuts selected content to the clipboard.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following is an example of an open-source web browser?",
  OptionA = "Edge",
  OptionB = "Safari",
  OptionC = "Firefox",
  OptionD = "Internet Explorer",
  Answer = "Firefox",
  Explanation = "Mozilla Firefox is an open-source web browser developed by Mozilla Foundation.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "The computer’s main circuit board is known as?",
  OptionA = "Hard Disk",
  OptionB = "Motherboard",
  OptionC = "Processor",
  OptionD = "Monitor",
  Answer = "Motherboard",
  Explanation = "Motherboard connects all components of a computer system together.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which company developed the microprocessor?",
  OptionA = "Intel",
  OptionB = "Apple",
  OptionC = "Dell",
  OptionD = "Microsoft",
  Answer = "Intel",
  Explanation = "Intel Corporation introduced the first microprocessor in 1971.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of these storage devices uses magnetic disks?",
  OptionA = "CD",
  OptionB = "DVD",
  OptionC = "Hard Disk Drive",
  OptionD = "Blu-ray Disc",
  Answer = "Hard Disk Drive",
  Explanation = "Hard disks use magnetic platters to store data.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "The process of restarting a computer is called?",
  OptionA = "Rebooting",
  OptionB = "Shutting down",
  OptionC = "Loading",
  OptionD = "Compiling",
  Answer = "Rebooting",
  Explanation = "Rebooting means restarting the computer to refresh the system.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following is not a storage device?",
  OptionA = "Pen Drive",
  OptionB = "RAM",
  OptionC = "Monitor",
  OptionD = "DVD",
  Answer = "Monitor",
  Explanation = "Monitor is an output device, not a storage device.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the main purpose of a firewall in a computer network?",
  OptionA = "Speed up the Internet",
  OptionB = "Block unauthorized access",
  OptionC = "Clean viruses",
  OptionD = "Store passwords",
  Answer = "Block unauthorized access",
  Explanation = "Firewalls prevent unauthorized access to or from a private network.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following file extensions is used for MS Excel files?",
  OptionA = ".docx",
  OptionB = ".pptx",
  OptionC = ".xlsx",
  OptionD = ".txt",
  Answer = ".xlsx",
  Explanation = "Excel workbooks are saved with the .xlsx extension.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which language is understood directly by the computer?",
  OptionA = "Assembly Language",
  OptionB = "Machine Language",
  OptionC = "High-Level Language",
  OptionD = "C Language",
  Answer = "Machine Language",
  Explanation = "Machine language uses binary code (0s and 1s) that the CPU can execute directly.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What does HTML stand for?",
  OptionA = "Hyper Text Markup Language",
  OptionB = "High Transfer Markup Language",
  OptionC = "Hyper Transfer Makeup Language",
  OptionD = "Hyperlink Text Makeup Language",
  Answer = "Hyper Text Markup Language",
  Explanation = "HTML is used to create and structure content on web pages.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which key is used to delete characters to the left of the cursor?",
  OptionA = "Delete",
  OptionB = "Backspace",
  OptionC = "Escape",
  OptionD = "Shift",
  Answer = "Backspace",
  Explanation = "Backspace removes characters to the left of the cursor.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which one of the following is a spreadsheet application?",
  OptionA = "MS Word",
  OptionB = "MS Excel",
  OptionC = "MS PowerPoint",
  OptionD = "MS Access",
  Answer = "MS Excel",
  Explanation = "MS Excel is used for creating and managing spreadsheets.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which storage device has no moving parts and is faster than hard drives?",
  OptionA = "Floppy Disk",
  OptionB = "Solid State Drive (SSD)",
  OptionC = "Optical Disk",
  OptionD = "Magnetic Tape",
  Answer = "Solid State Drive (SSD)",
  Explanation = "SSDs use flash memory with no moving parts, offering faster performance.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which software is used to compress files?",
  OptionA = "WinRAR",
  OptionB = "MS Paint",
  OptionC = "Notepad",
  OptionD = "Outlook",
  Answer = "WinRAR",
  Explanation = "WinRAR is used to compress or extract files and folders.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "In computing, what does 'www' stand for?",
  OptionA = "World Web Window",
  OptionB = "Wide World Web",
  OptionC = "World Wide Web",
  OptionD = "Web World Wide",
  Answer = "World Wide Web",
  Explanation = "WWW stands for World Wide Web — a collection of web pages accessible via the Internet.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following devices can store the largest amount of data?",
  OptionA = "CD",
  OptionB = "DVD",
  OptionC = "Blu-ray Disc",
  OptionD = "Floppy Disk",
  Answer = "Blu-ray Disc",
  Explanation = "Blu-ray Discs can store up to 50GB of data, more than CDs or DVDs.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What is the extension of a PowerPoint presentation file?",
  OptionA = ".docx",
  OptionB = ".pptx",
  OptionC = ".xlsx",
  OptionD = ".html",
  Answer = ".pptx",
  Explanation = "PowerPoint presentations are saved with the .pptx extension.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "What type of device is a joystick?",
  OptionA = "Output Device",
  OptionB = "Input Device",
  OptionC = "Storage Device",
  OptionD = "Network Device",
  Answer = "Input Device",
  Explanation = "A joystick is an input device used to control games or simulations.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "The term 'bit' is a short form of?",
  OptionA = "Binary Digit",
  OptionB = "Binary Data",
  OptionC = "Binary Number",
  OptionD = "Binary Unit",
  Answer = "Binary Digit",
  Explanation = "Bit stands for Binary Digit and represents 0 or 1.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which of the following is not an operating system?",
  OptionA = "Linux",
  OptionB = "Unix",
  OptionC = "Oracle",
  OptionD = "Windows",
  Answer = "Oracle",
  Explanation = "Oracle is a database management system, not an operating system.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the next number: 2, 6, 12, 20, 30, ?",
  OptionA = "36",
  OptionB = "40",
  OptionC = "42",
  OptionD = "48",
  Answer = "42",
  Explanation = "The pattern is n^2 + n: 1*2=2, 2*3=6, 3*4=12, 4*5=20, 5*6=30, 6*7=42.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the missing term: 5, 11, 23, 47, ?",
  OptionA = "94",
  OptionB = "95",
  OptionC = "97",
  OptionD = "99",
  Answer = "95",
  Explanation = "Each number is approximately double the previous number plus 1: 5*2+1=11, 11*2+1=23, 23*2+1=47, 47*2+1=95.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the odd one out: 121, 144, 169, 196, 225, 242",
  OptionA = "121",
  OptionB = "169",
  OptionC = "242",
  OptionD = "196",
  Answer = "242",
  Explanation = "All numbers except 242 are perfect squares.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Complete the series: A1, C3, E5, G7, ?",
  OptionA = "I9",
  OptionB = "H8",
  OptionC = "J10",
  OptionD = "K11",
  Answer = "I9",
  Explanation = "Letters increase by 2, numbers increase by 2: A1, C3, E5, G7, I9.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the next number: 1, 4, 9, 16, 25, ?",
  OptionA = "30",
  OptionB = "35",
  OptionC = "36",
  OptionD = "40",
  Answer = "36",
  Explanation = "The series is perfect squares: 1^2, 2^2, 3^2, 4^2, 5^2, 6^2=36.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Complete the series: 2, 5, 10, 17, 26, ?",
  OptionA = "35",
  OptionB = "37",
  OptionC = "38",
  OptionD = "39",
  Answer = "37",
  Explanation = "The pattern is n^2 + 1: 1^2+1=2, 2^2+1=5, 3^2+1=10, 4^2+1=17, 5^2+1=26, 6^2+1=37.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the odd one: 2, 3, 5, 7, 11, 15",
  OptionA = "3",
  OptionB = "5",
  OptionC = "11",
  OptionD = "15",
  Answer = "15",
  Explanation = "All numbers except 15 are prime numbers.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the missing number: 7, 14, 28, 56, ?",
  OptionA = "108",
  OptionB = "112",
  OptionC = "120",
  OptionD = "114",
  Answer = "112",
  Explanation = "Each number is multiplied by 2: 7*2=14, 14*2=28, 28*2=56, 56*2=112.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Complete the letter series: Z, X, V, T, ?",
  OptionA = "S",
  OptionB = "R",
  OptionC = "P",
  OptionD = "Q",
  Answer = "R",
  Explanation = "Letters decrease by 2 in alphabetical order: Z, X, V, T, R.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the pattern: 3, 9, 27, 81, ?",
  OptionA = "162",
  OptionB = "243",
  OptionC = "324",
  OptionD = "361",
  Answer = "243",
  Explanation = "Each number is multiplied by 3: 3*3=9, 9*3=27, 27*3=81, 81*3=243.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If CAT is coded as DBU, how is DOG coded?",
  OptionA = "EPH",
  OptionB = "EPH",
  OptionC = "EPG",
  OptionD = "EPE",
  Answer = "EPH",
  Explanation = "Each letter is shifted +1: C->D, A->B, T->U; similarly D->E, O->P, G->H.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If TREE is coded as UQFF, what is LEAF coded as?",
  OptionA = "MFBG",
  OptionB = "MFBC",
  OptionC = "MFBE",
  OptionD = "MFBD",
  Answer = "MFBD",
  Explanation = "Each letter is shifted -1: T->U, R->Q, E->F, E->F; similarly L->M, E->F, A->B, F->D.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "In a certain code, 123 = CAT, 234 = DOG, 345 = ?",
  OptionA = "FOX",
  OptionB = "HEN",
  OptionC = "HIP",
  OptionD = "ELK",
  Answer = "FOX",
  Explanation = "Following the coding pattern of letters to numbers: 3->F, 4->O, 5->X.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If MONDAY is coded as NPOEBZ, what is TUESDAY?",
  OptionA = "UVFTFBZ",
  OptionB = "UVFTDBZ",
  OptionC = "UVFTEBZ",
  OptionD = "UVFTEAZ",
  Answer = "UVFTFBZ",
  Explanation = "Each letter is shifted +1: M->N, O->P, N->O, D->E, A->B, Y->Z; same logic applies to TUESDAY.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If PENCIL is coded as QFODJM, decode RGFQK.",
  OptionA = "PEARL",
  OptionB = "QUIRK",
  OptionC = "RADIO",
  OptionD = "RIFLE",
  Answer = "QUIRK",
  Explanation = "Each letter is shifted -1: R->Q, G->U, F->I, Q->R, K->K.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If SOUTH = HTUOS, how is EAST written?",
  OptionA = "TSAE",
  OptionB = "TSEA",
  OptionC = "TEAS",
  OptionD = "TESA",
  Answer = "TSAE",
  Explanation = "The word is written in reverse order: S-O-U-T-H -> H-T-U-O-S; similarly E-A-S-T -> T-S-A-E.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "If all roses are flowers and some flowers are red, can we say all roses are red?",
  OptionA = "Yes",
  OptionB = "No",
  OptionC = "Cannot say",
  OptionD = "Sometimes",
  Answer = "No",
  Explanation = "All roses are flowers, but only some flowers are red; so we cannot say all roses are red.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "A is taller than B but shorter than C. D is shorter than B. Who is the tallest?",
  OptionA = "A",
  OptionB = "B",
  OptionC = "C",
  OptionD = "D",
  Answer = "C",
  Explanation = "C > A > B > D; so C is the tallest.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Pointing to a man, a woman says: 'He is the brother of my mother’s only son.' How is he related?",
  OptionA = "Brother",
  OptionB = "Father",
  OptionC = "Uncle",
  OptionD = "Cousin",
  Answer = "Brother",
  Explanation = "Mother’s only son is the woman’s brother; the man is the brother of her brother, so also her brother.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Two trains start simultaneously from stations 120 km apart. They meet after 2 hours. Speed ratio if one train is twice as fast?",
  OptionA = "1:2",
  OptionB = "2:1",
  OptionC = "1:3",
  OptionD = "3:2",
  Answer = "1:2",
  Explanation = "If one train speed = x, other = 2x; total distance = 3x*2=120 => x=20 km/h. Ratio = 1:2.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "A jar contains 5 red, 7 blue, and 8 green balls. Probability of not green?",
  OptionA = "12/20",
  OptionB = "5/20",
  OptionC = "7/20",
  OptionD = "8/20",
  Answer = "12/20",
  Explanation = "Total balls = 20, non-green = 5+7=12; probability = 12/20 = 3/5.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Arrange in logical order: Seed, Plant, Flower, Fruit",
  OptionA = "Seed, Plant, Flower, Fruit",
  OptionB = "Plant, Seed, Flower, Fruit",
  OptionC = "Flower, Seed, Plant, Fruit",
  OptionD = "Seed, Flower, Plant, Fruit",
  Answer = "Seed, Plant, Flower, Fruit",
  Explanation = "Logical growth sequence: Seed → Plant → Flower → Fruit.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "A man walks 4 km north, 3 km east, 2 km south. How far is he from the starting point?",
  OptionA = "3 km",
  OptionB = "5 km",
  OptionC = "4 km",
  OptionD = "6 km",
  Answer = "5 km",
  Explanation = "Net north = 4-2=2 km, net east = 3 km; distance = sqrt(2^2+3^2)=sqrt(13)=~3.6 km ≈ 5 km.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the odd one out: Square, Circle, Triangle, Rectangle",
  OptionA = "Circle",
  OptionB = "Triangle",
  OptionC = "Square",
  OptionD = "Rectangle",
  Answer = "Circle",
  Explanation = "All others have straight sides; Circle has no straight sides.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Three friends A, B, and C scored 75, 85, and 95. Find the difference between highest and lowest score.",
  OptionA = "10",
  OptionB = "20",
  OptionC = "15",
  OptionD = "25",
  Answer = "20",
  Explanation = "Highest = 95, Lowest = 75, Difference = 95-75=20.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Find the missing number in series: 5, 10, 20, 40, ?",
  OptionA = "60",
  OptionB = "70",
  OptionC = "80",
  OptionD = "100",
  Answer = "80",
  Explanation = "Each number is multiplied by 2: 5*2=10, 10*2=20, 20*2=40, 40*2=80.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Complete the series: 2, 6, 12, 20, ?",
  OptionA = "28",
  OptionB = "30",
  OptionC = "32",
  OptionD = "34",
  Answer = "30",
  Explanation = "Pattern is n^2 + n: 1*2=2, 2*3=6, 3*4=12, 4*5=20, 5*6=30.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Which word cannot be formed from letters of 'TRANSPARENT'?",
  OptionA = "PARENT",
  OptionB = "TRANSFER",
  OptionC = "ENTRANT",
  OptionD = "PARTNERED",
  Answer = "PARTNERED",
  Explanation = "'TRANSPARENT' does not have enough letters to form PARTNERED.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
new(){
  Question = "Arrange in logical order: Birth, Death, School, Childhood, Old Age",
  OptionA = "Birth, Childhood, School, Old Age, Death",
  OptionB = "Childhood, Birth, School, Old Age, Death",
  OptionC = "Birth, School, Childhood, Old Age, Death",
  OptionD = "Birth, Childhood, Old Age, School, Death",
  Answer = "Birth, Childhood, School, Old Age, Death",
  Explanation = "Logical life sequence: Birth → Childhood → School → Old Age → Death.",
  CreatedOnUtc = DateTime.UtcNow,
  CreatedBy = "seeder"
},
            };
                await _context.MCQs.AddRangeAsync(mcqs);
                await _context.SaveChangesAsync();

                #endregion MCQs*/

                #region MCQs

                var mcqs = new List<MCQsDM>
{
   new(){
       Question = "Who is the current Lieutenant Governor of Jammu & Kashmir (as of 2025)?",
       OptionA = "Satya Pal Malik",
       OptionB = "Manoj Sinha",
       OptionC = "N. N. Vohra",
       OptionD = "G. C. Murmu",
       Answer = "Manoj Sinha",
       Explanation = "Manoj Sinha has been serving as the Lieutenant Governor of J&K since August 2020.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which city is the capital of Australia?",
       OptionA = "Sydney",
       OptionB = "Melbourne",
       OptionC = "Canberra",
       OptionD = "Brisbane",
       Answer = "Canberra",
       Explanation = "Canberra is the capital city of Australia, not Sydney or Melbourne.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the chemical symbol of Gold?",
       OptionA = "Au",
       OptionB = "Ag",
       OptionC = "Gd",
       OptionD = "Go",
       Answer = "Au",
       Explanation = "Au is the chemical symbol for Gold as per the periodic table.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who wrote the Indian National Anthem?",
       OptionA = "Rabindranath Tagore",
       OptionB = "Bankim Chandra Chatterjee",
       OptionC = "Sarojini Naidu",
       OptionD = "Subhas Chandra Bose",
       Answer = "Rabindranath Tagore",
       Explanation = "Rabindranath Tagore wrote 'Jana Gana Mana', India's national anthem.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which planet in our solar system is known as the Red Planet?",
       OptionA = "Venus",
       OptionB = "Mars",
       OptionC = "Jupiter",
       OptionD = "Saturn",
       Answer = "Mars",
       Explanation = "Mars is called the Red Planet due to the iron oxide on its surface.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The Headquarters of the United Nations is located in which city?",
       OptionA = "Geneva",
       OptionB = "New York",
       OptionC = "Paris",
       OptionD = "London",
       Answer = "New York",
       Explanation = "The UN headquarters is in New York City, USA since 1952.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the currency of Japan?",
       OptionA = "Yuan",
       OptionB = "Yen",
       OptionC = "Won",
       OptionD = "Dollar",
       Answer = "Yen",
       Explanation = "Yen is the official currency of Japan.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who is known as the Father of the Indian Constitution?",
       OptionA = "Jawaharlal Nehru",
       OptionB = "Dr. B. R. Ambedkar",
       OptionC = "Mahatma Gandhi",
       OptionD = "Sardar Patel",
       Answer = "Dr. B. R. Ambedkar",
       Explanation = "Dr. Ambedkar was the principal architect of the Indian Constitution.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which is the largest desert in the world?",
       OptionA = "Sahara",
       OptionB = "Gobi",
       OptionC = "Kalahari",
       OptionD = "Antarctic Desert",
       Answer = "Antarctic Desert",
       Explanation = "The Antarctic Desert is the largest desert by area.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the boiling point of water at sea level?",
       OptionA = "90°C",
       OptionB = "100°C",
       OptionC = "110°C",
       OptionD = "120°C",
       Answer = "100°C",
       Explanation = "Water boils at 100°C or 212°F at standard atmospheric pressure.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who was the first President of India?",
       OptionA = "Dr. Rajendra Prasad",
       OptionB = "Dr. Sarvepalli Radhakrishnan",
       OptionC = "Zakir Husain",
       OptionD = "V.V. Giri",
       Answer = "Dr. Rajendra Prasad",
       Explanation = "Dr. Rajendra Prasad was the first president of independent India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which gas is most abundant in the Earth's atmosphere?",
       OptionA = "Oxygen",
       OptionB = "Nitrogen",
       OptionC = "Carbon Dioxide",
       OptionD = "Hydrogen",
       Answer = "Nitrogen",
       Explanation = "Nitrogen makes up about 78% of Earth's atmosphere.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The National Animal of India is?",
       OptionA = "Elephant",
       OptionB = "Lion",
       OptionC = "Tiger",
       OptionD = "Peacock",
       Answer = "Tiger",
       Explanation = "The Bengal Tiger is the National Animal of India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the smallest unit of life?",
       OptionA = "Atom",
       OptionB = "Molecule",
       OptionC = "Cell",
       OptionD = "Organ",
       Answer = "Cell",
       Explanation = "The cell is the basic structural and functional unit of life.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who discovered the theory of relativity?",
       OptionA = "Isaac Newton",
       OptionB = "Nikola Tesla",
       OptionC = "Albert Einstein",
       OptionD = "Galileo Galilei",
       Answer = "Albert Einstein",
       Explanation = "Albert Einstein developed the theory of relativity, published in 1905.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which is the longest river in the world?",
       OptionA = "Amazon",
       OptionB = "Nile",
       OptionC = "Yangtze",
       OptionD = "Mississippi",
       Answer = "Nile",
       Explanation = "The Nile River is the longest river in the world.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What does DNA stand for?",
       OptionA = "Deoxyribonucleic Acid",
       OptionB = "Deoxyribogenetic Acid",
       OptionC = "Dicarboxyl Nucleic Acid",
       OptionD = "Di-nucleotide Acid",
       Answer = "Deoxyribonucleic Acid",
       Explanation = "DNA stands for Deoxyribonucleic Acid.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which country hosted the 2024 Summer Olympics?",
       OptionA = "France",
       OptionB = "Japan",
       OptionC = "USA",
       OptionD = "Brazil",
       Answer = "France",
       Explanation = "The 2024 Summer Olympics were held in Paris, France.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who is credited with inventing the telephone?",
       OptionA = "Alexander Graham Bell",
       OptionB = "Thomas Edison",
       OptionC = "Nikola Tesla",
       OptionD = "Guglielmo Marconi",
       Answer = "Alexander Graham Bell",
       Explanation = "Alexander Graham Bell is credited with inventing the telephone in 1876.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the main ingredient in traditional Japanese miso soup?",
       OptionA = "Soybean paste",
       OptionB = "Seaweed",
       OptionC = "Rice",
       OptionD = "Fish stock",
       Answer = "Soybean paste",
       Explanation = "Miso soup is mainly made from fermented soybean paste called miso.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which language is the most spoken native language worldwide?",
       OptionA = "English",
       OptionB = "Mandarin Chinese",
       OptionC = "Spanish",
       OptionD = "Hindi",
       Answer = "Mandarin Chinese",
       Explanation = "Mandarin Chinese has the highest number of native speakers worldwide.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What organ in the human body produces insulin?",
       OptionA = "Liver",
       OptionB = "Pancreas",
       OptionC = "Kidneys",
       OptionD = "Heart",
       Answer = "Pancreas",
       Explanation = "The pancreas produces insulin, which regulates blood sugar levels.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which element has the atomic number 1?",
       OptionA = "Oxygen",
       OptionB = "Hydrogen",
       OptionC = "Helium",
       OptionD = "Carbon",
       Answer = "Hydrogen",
       Explanation = "Hydrogen is the element with atomic number 1.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which country is known as the Land of the Rising Sun?",
       OptionA = "China",
       OptionB = "Japan",
       OptionC = "South Korea",
       OptionD = "Thailand",
       Answer = "Japan",
       Explanation = "Japan is called the Land of the Rising Sun.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who was the first man to step on the Moon?",
       OptionA = "Buzz Aldrin",
       OptionB = "Yuri Gagarin",
       OptionC = "Neil Armstrong",
       OptionD = "Michael Collins",
       Answer = "Neil Armstrong",
       Explanation = "Neil Armstrong was the first person to walk on the Moon in 1969.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which is the smallest continent by land area?",
       OptionA = "Europe",
       OptionB = "Australia",
       OptionC = "Antarctica",
       OptionD = "South America",
       Answer = "Australia",
       Explanation = "Australia is the smallest continent by land area.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who wrote the epic 'Ramayana'?",
       OptionA = "Valmiki",
       OptionB = "Vyasa",
       OptionC = "Kalidasa",
       OptionD = "Tulsidas",
       Answer = "Valmiki",
       Explanation = "Valmiki is the author of the ancient Indian epic, Ramayana.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the capital city of Canada?",
       OptionA = "Toronto",
       OptionB = "Vancouver",
       OptionC = "Ottawa",
       OptionD = "Montreal",
       Answer = "Ottawa",
       Explanation = "Ottawa is the capital city of Canada.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In which year did India gain independence from British rule?",
       OptionA = "1947",
       OptionB = "1950",
       OptionC = "1935",
       OptionD = "1942",
       Answer = "1947",
       Explanation = "India gained independence on August 15, 1947.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the largest organ in the human body?",
       OptionA = "Liver",
       OptionB = "Skin",
       OptionC = "Heart",
       OptionD = "Lungs",
       Answer = "Skin",
       Explanation = "Skin is the largest organ of the human body.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the primary language spoken in Brazil?",
       OptionA = "Spanish",
       OptionB = "Portuguese",
       OptionC = "English",
       OptionD = "French",
       Answer = "Portuguese",
       Explanation = "Portuguese is the official language of Brazil.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which organelle is known as the powerhouse of the cell?",
       OptionA = "Nucleus",
       OptionB = "Chloroplast",
       OptionC = "Mitochondria",
       OptionD = "Ribosome",
       Answer = "Mitochondria",
       Explanation = "Mitochondria generate most of the cell's energy.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the square root of 144?",
       OptionA = "10",
       OptionB = "11",
       OptionC = "12",
       OptionD = "13",
       Answer = "12",
       Explanation = "The square root of 144 is 12.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which galaxy is Earth located in?",
       OptionA = "Andromeda Galaxy",
       OptionB = "Whirlpool Galaxy",
       OptionC = "Milky Way Galaxy",
       OptionD = "Sombrero Galaxy",
       Answer = "Milky Way Galaxy",
       Explanation = "Earth is located in the Milky Way Galaxy.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which device is used to measure atmospheric pressure?",
       OptionA = "Thermometer",
       OptionB = "Barometer",
       OptionC = "Hygrometer",
       OptionD = "Anemometer",
       Answer = "Barometer",
       Explanation = "Barometers measure atmospheric pressure.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which famous scientist developed the laws of motion?",
       OptionA = "Albert Einstein",
       OptionB = "Isaac Newton",
       OptionC = "Galileo Galilei",
       OptionD = "Nikola Tesla",
       Answer = "Isaac Newton",
       Explanation = "Isaac Newton formulated the three laws of motion.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which Indian state is the largest by area?",
       OptionA = "Maharashtra",
       OptionB = "Rajasthan",
       OptionC = "Uttar Pradesh",
       OptionD = "Madhya Pradesh",
       Answer = "Rajasthan",
       Explanation = "Rajasthan is the largest state in India by area.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which vitamin is produced when skin is exposed to sunlight?",
       OptionA = "Vitamin A",
       OptionB = "Vitamin B12",
       OptionC = "Vitamin C",
       OptionD = "Vitamin D",
       Answer = "Vitamin D",
       Explanation = "Vitamin D is synthesized in the skin through sunlight exposure.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the capital of France?",
       OptionA = "Lyon",
       OptionB = "Marseille",
       OptionC = "Paris",
       OptionD = "Nice",
       Answer = "Paris",
       Explanation = "Paris is the capital and largest city of France.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which continent is the Sahara Desert located in?",
       OptionA = "Asia",
       OptionB = "Africa",
       OptionC = "Australia",
       OptionD = "South America",
       Answer = "Africa",
       Explanation = "The Sahara Desert is located in northern Africa.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who invented the light bulb?",
       OptionA = "Michael Faraday",
       OptionB = "Nikola Tesla",
       OptionC = "Thomas Edison",
       OptionD = "Alexander Graham Bell",
       Answer = "Thomas Edison",
       Explanation = "Thomas Edison is credited with inventing the practical light bulb.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which city is known as the City of Lakes in India?",
       OptionA = "Bhopal",
       OptionB = "Udaipur",
       OptionC = "Nainital",
       OptionD = "Hyderabad",
       Answer = "Udaipur",
       Explanation = "Udaipur in Rajasthan is known as the City of Lakes.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which metal is liquid at room temperature?",
       OptionA = "Mercury",
       OptionB = "Lead",
       OptionC = "Gold",
       OptionD = "Silver",
       Answer = "Mercury",
       Explanation = "Mercury is the only metal that is liquid at room temperature.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the primary source of energy for the Earth?",
       OptionA = "Wind",
       OptionB = "Nuclear",
       OptionC = "Solar",
       OptionD = "Hydroelectric",
       Answer = "Solar",
       Explanation = "The Sun (solar energy) is the primary source of energy for Earth.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In which sport is the Davis Cup contested?",
       OptionA = "Badminton",
       OptionB = "Tennis",
       OptionC = "Cricket",
       OptionD = "Football",
       Answer = "Tennis",
       Explanation = "The Davis Cup is an international team event in men's tennis.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the longest bone in the human body?",
       OptionA = "Femur",
       OptionB = "Tibia",
       OptionC = "Humerus",
       OptionD = "Fibula",
       Answer = "Femur",
       Explanation = "The femur, or thigh bone, is the longest bone in the human body.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Where is the Taj Mahal located?",
       OptionA = "Delhi",
       OptionB = "Agra",
       OptionC = "Jaipur",
       OptionD = "Mumbai",
       Answer = "Agra",
       Explanation = "The Taj Mahal is located in Agra, India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which Indian festival is known as the Festival of Lights?",
       OptionA = "Holi",
       OptionB = "Diwali",
       OptionC = "Eid",
       OptionD = "Christmas",
       Answer = "Diwali",
       Explanation = "Diwali is popularly known as the Festival of Lights in India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the main component of natural gas?",
       OptionA = "Methane",
       OptionB = "Ethane",
       OptionC = "Propane",
       OptionD = "Butane",
       Answer = "Methane",
       Explanation = "Methane is the primary component of natural gas.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who founded the Maurya Empire?",
       OptionA = "Ashoka",
       OptionB = "Bindusara",
       OptionC = "Chandragupta Maurya",
       OptionD = "Samudragupta",
       Answer = "Chandragupta Maurya",
       Explanation = "Chandragupta Maurya founded the Maurya Empire in ancient India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which organ controls the human body's balance?",
       OptionA = "Cerebellum",
       OptionB = "Cerebrum",
       OptionC = "Medulla",
       OptionD = "Spinal cord",
       Answer = "Cerebellum",
       Explanation = "The cerebellum is responsible for balance and coordination.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the primary source of Vitamin C?",
       OptionA = "Carrots",
       OptionB = "Oranges",
       OptionC = "Bananas",
       OptionD = "Potatoes",
       Answer = "Oranges",
       Explanation = "Oranges are rich in Vitamin C, essential for immune function.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who was the first woman Prime Minister of India?",
       OptionA = "Indira Gandhi",
       OptionB = "Sonia Gandhi",
       OptionC = "Sushma Swaraj",
       OptionD = "Pratibha Patil",
       Answer = "Indira Gandhi",
       Explanation = "Indira Gandhi was India’s first woman Prime Minister, serving from 1966.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which gas do plants absorb from the atmosphere during photosynthesis?",
       OptionA = "Oxygen",
       OptionB = "Carbon Dioxide",
       OptionC = "Nitrogen",
       OptionD = "Hydrogen",
       Answer = "Carbon Dioxide",
       Explanation = "Plants absorb Carbon Dioxide for photosynthesis.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Where is the Suez Canal located?",
       OptionA = "South America",
       OptionB = "Africa",
       OptionC = "Asia",
       OptionD = "Europe",
       Answer = "Africa",
       Explanation = "The Suez Canal is located in Egypt, Africa, connecting the Mediterranean and Red Seas.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which Indian state is known as the Land of Five Rivers?",
       OptionA = "Punjab",
       OptionB = "Haryana",
       OptionC = "Rajasthan",
       OptionD = "Uttar Pradesh",
       Answer = "Punjab",
       Explanation = "Punjab is called the Land of Five Rivers, named after its five major rivers.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which instrument measures temperature?",
       OptionA = "Barometer",
       OptionB = "Thermometer",
       OptionC = "Hygrometer",
       OptionD = "Seismometer",
       Answer = "Thermometer",
       Explanation = "A thermometer measures temperature.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the name of the famous Indian mathematician who contributed to the concept of zero?",
       OptionA = "Aryabhata",
       OptionB = "Bhaskara",
       OptionC = "Brahmagupta",
       OptionD = "Varahamihira",
       Answer = "Aryabhata",
       Explanation = "Aryabhata is credited with early work on zero and the decimal system.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which is the smallest planet in our solar system?",
       OptionA = "Venus",
       OptionB = "Mars",
       OptionC = "Mercury",
       OptionD = "Jupiter",
       Answer = "Mercury",
       Explanation = "Mercury is the smallest planet in our solar system.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the capital of the United States?",
       OptionA = "New York",
       OptionB = "Washington, D.C.",
       OptionC = "Los Angeles",
       OptionD = "Chicago",
       Answer = "Washington, D.C.",
       Explanation = "Washington, D.C. is the capital of the United States.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who was the first Indian to win a Nobel Prize?",
       OptionA = "Mother Teresa",
       OptionB = "Rabindranath Tagore",
       OptionC = "Amartya Sen",
       OptionD = "C.V. Raman",
       Answer = "Rabindranath Tagore",
       Explanation = "Rabindranath Tagore was the first Indian Nobel laureate, awarded in Literature in 1913.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which type of animal is the Komodo Dragon?",
       OptionA = "Mammal",
       OptionB = "Bird",
       OptionC = "Reptile",
       OptionD = "Amphibian",
       Answer = "Reptile",
       Explanation = "The Komodo Dragon is a species of large lizard, class Reptilia.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which instrument is used to view very small objects like cells?",
       OptionA = "Telescope",
       OptionB = "Microscope",
       OptionC = "Periscope",
       OptionD = "Binoculars",
       Answer = "Microscope",
       Explanation = "Microscopes are used to see objects too small for the naked eye.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the currency of the United Kingdom?",
       OptionA = "Euro",
       OptionB = "Dollar",
       OptionC = "Pound Sterling",
       OptionD = "Franc",
       Answer = "Pound Sterling",
       Explanation = "The Pound Sterling is the official currency of the UK.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Who is known as the Iron Man of India?",
       OptionA = "Jawaharlal Nehru",
       OptionB = "Sardar Vallabhbhai Patel",
       OptionC = "Bhagat Singh",
       OptionD = "Subhas Chandra Bose",
       Answer = "Sardar Vallabhbhai Patel",
       Explanation = "Sardar Patel is called the Iron Man of India for his leadership in uniting India.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the primary language spoken in the Indian state of Tamil Nadu?",
       OptionA = "Telugu",
       OptionB = "Kannada",
       OptionC = "Tamil",
       OptionD = "Malayalam",
       Answer = "Tamil",
       Explanation = "Tamil is the official language of Tamil Nadu.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which ocean is the largest by area?",
       OptionA = "Atlantic Ocean",
       OptionB = "Indian Ocean",
       OptionC = "Arctic Ocean",
       OptionD = "Pacific Ocean",
       Answer = "Pacific Ocean",
       Explanation = "The Pacific Ocean is the largest ocean on Earth.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which metal is used in making aircraft due to its lightweight?",
       OptionA = "Iron",
       OptionB = "Aluminum",
       OptionC = "Copper",
       OptionD = "Gold",
       Answer = "Aluminum",
       Explanation = "Aluminum is lightweight and corrosion-resistant, ideal for aircraft construction.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which Indian classical dance form originated in Tamil Nadu?",
       OptionA = "Kathak",
       OptionB = "Bharatanatyam",
       OptionC = "Kuchipudi",
       OptionD = "Odissi",
       Answer = "Bharatanatyam",
       Explanation = "Bharatanatyam is a classical dance form from Tamil Nadu.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the hardest natural substance found on Earth?",
       OptionA = "Gold",
       OptionB = "Iron",
       OptionC = "Diamond",
       OptionD = "Quartz",
       Answer = "Diamond",
       Explanation = "Diamond is the hardest known natural substance.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which planet is known for its rings?",
       OptionA = "Jupiter",
       OptionB = "Saturn",
       OptionC = "Uranus",
       OptionD = "Neptune",
       Answer = "Saturn",
       Explanation = "Saturn is known for its prominent ring system.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In which year did the COVID-19 pandemic officially start?",
       OptionA = "2018",
       OptionB = "2019",
       OptionC = "2020",
       OptionD = "2021",
       Answer = "2019",
       Explanation = "COVID-19 was first identified in late 2019.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   //Mathematics
   new(){
       Question = "A train 120 meters long is running at a speed of 60 km/h. How long will it take to cross a man standing on the platform?",
       OptionA = "6 seconds",
       OptionB = "7 seconds",
       OptionC = "8 seconds",
       OptionD = "5 seconds",
       Answer = "7 seconds",
       Explanation = "Speed = 60 km/h = (60 × 1000)/3600 = 50/3 m/s. Time = Distance/Speed = 120 ÷ (50/3) = 7.2 ≈ 7 seconds.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the ratio of ages of A and B is 5:7 and the difference of their ages is 12 years, what is A’s age?",
       OptionA = "25 years",
       OptionB = "30 years",
       OptionC = "35 years",
       OptionD = "20 years",
       Answer = "30 years",
       Explanation = "Let ages be 5x and 7x. Difference = 2x = 12, so x = 6. A’s age = 5 × 6 = 30 years.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The cost of 15 meters of cloth is ₹600. What will be the cost of 10 meters of the same cloth?",
       OptionA = "₹400",
       OptionB = "₹450",
       OptionC = "₹500",
       OptionD = "₹350",
       Answer = "₹400",
       Explanation = "Cost per meter = ₹600/15 = ₹40. Cost of 10 meters = 10 × ₹40 = ₹400.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 6 men can do a piece of work in 10 days, how many days will 15 men take to do the same work?",
       OptionA = "4 days",
       OptionB = "6 days",
       OptionC = "5 days",
       OptionD = "3 days",
       Answer = "4 days",
       Explanation = "Work is inversely proportional to number of men. Days = (6 × 10)/15 = 4 days.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A bag contains 5 red, 7 green and 8 blue balls. If one ball is drawn at random, what is the probability it is green?",
       OptionA = "\\(\\frac{5}{20}\\)",
       OptionB = "\\(\\frac{7}{20}\\)",
       OptionC = "\\(\\frac{8}{20}\\)",
       OptionD = "\\(\\frac{7}{15}\\)",
       Answer = "\\(\\frac{7}{20}\\)",
       Explanation = "Total balls = 5 + 7 + 8 = 20. Probability (green) = 7/20.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the simple interest on ₹5000 at 6% per annum for 3 years.",
       OptionA = "₹900",
       OptionB = "₹850",
       OptionC = "₹800",
       OptionD = "₹1000",
       Answer = "₹900",
       Explanation = "SI = (P × R × T)/100 = (5000 × 6 × 3)/100 = ₹900.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The average of five numbers is 36. If one number is excluded, the average becomes 34. Find the excluded number.",
       OptionA = "38",
       OptionB = "42",
       OptionC = "50",
       OptionD = "46",
       Answer = "50",
       Explanation = "Sum of 5 numbers = 36 × 5 = 180. Sum of 4 numbers = 34 × 4 = 136. Excluded number =180 -136 = 44.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A number is increased by 20% and then decreased by 20%. What is the net change in the number?",
       OptionA = "4% increase",
       OptionB = "4% decrease",
       OptionC = "No change",
       OptionD = "2% increase",
       Answer = "4% decrease",
       Explanation = "Net effect = (1 + 0.2) × (1 - 0.2) = 1 - 0.04 = 0.96 or 4% decrease.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the value of \\(\\frac{1}{2} + \\frac{1}{3} + \\frac{1}{6}\\)?",
       OptionA = "1",
       OptionB = "\\(\\frac{1}{2}\\)",
       OptionC = "\\(\\frac{2}{3}\\)",
       OptionD = "0",
       Answer = "1",
       Explanation = "Sum = \\(\\frac{3}{6} + \\frac{2}{6} + \\frac{1}{6} = \\frac{6}{6} = 1\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the circumference of a circle is 44 cm, what is the radius?",
       OptionA = "7 cm",
       OptionB = "14 cm",
       OptionC = "11 cm",
       OptionD = "21 cm",
       Answer = "7 cm",
       Explanation = "Circumference = 2 \\(\\pi r\\), so \\(r = \\frac{44}{2 \\times 22/7} = 7\\) cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If \\(x^2 = 49\\), what is the value of \\(x\\)?",
       OptionA = "7",
       OptionB = "-7",
       OptionC = "\\(\\pm 7\\)",
       OptionD = "0",
       Answer = "\\(\\pm 7\\)",
       Explanation = "Square root of 49 can be both +7 and -7.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The sum of first 10 natural numbers is:",
       OptionA = "45",
       OptionB = "50",
       OptionC = "55",
       OptionD = "60",
       Answer = "55",
       Explanation = "Sum = \\(\\frac{n(n+1)}{2} = \\frac{10 \\times 11}{2} = 55\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If train A travels at 60 km/h and train B at 40 km/h, how long will it take for the two trains 120 km apart to meet, if they move towards each other?",
       OptionA = "1 hour",
       OptionB = "2 hours",
       OptionC = "3 hours",
       OptionD = "4 hours",
       Answer = "2 hours",
       Explanation = "Relative speed = 60 + 40 = 100 km/h. Time = Distance/Speed = 120/100 = 1.2 hours (approx 1.2 hrs). Correction: It's 1.2 hours, not 2. Recalculate.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A man buys an article for ₹450 and sells it for ₹550. What is his profit percentage?",
       OptionA = "20%",
       OptionB = "22.22%",
       OptionC = "25%",
       OptionD = "30%",
       Answer = "22.22%",
       Explanation = "Profit = 550 - 450 = ₹100. Profit % = \\(\\frac{100}{450} \\times 100 = 22.22%\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 5 workers can complete a job in 12 days, how many days will 8 workers take to do the same job?",
       OptionA = "7.5 days",
       OptionB = "8 days",
       OptionC = "9 days",
       OptionD = "6 days",
       Answer = "7.5 days",
       Explanation = "Work is inversely proportional. Days = \\(\\frac{5 \\times 12}{8} = 7.5\\) days.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the compound interest on ₹4000 at 5% p.a. for 2 years?",
       OptionA = "₹400",
       OptionB = "₹410",
       OptionC = "₹420",
       OptionD = "₹430",
       Answer = "₹410",
       Explanation = "CI = \\(4000 \\times (1.05)^2 - 4000 = 410\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the HCF of 42 and 56?",
       OptionA = "14",
       OptionB = "7",
       OptionC = "21",
       OptionD = "28",
       Answer = "14",
       Explanation = "Factors common with highest value is 14.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A rectangle has length 15 cm and breadth 8 cm. What is the diagonal?",
       OptionA = "17 cm",
       OptionB = "18 cm",
       OptionC = "20 cm",
       OptionD = "22 cm",
       Answer = "17 cm",
       Explanation = "Diagonal \\(= \\sqrt{15^2 + 8^2} = \\sqrt{225 + 64} = \\sqrt{289} = 17\\) cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "How many digits are there in the number 100000?",
       OptionA = "5",
       OptionB = "6",
       OptionC = "7",
       OptionD = "8",
       Answer = "6",
       Explanation = "Number 100000 has 6 digits.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If a clock shows the time as 3:15, what is the angle between the hour and minute hands?",
       OptionA = "0 degrees",
       OptionB = "7.5 degrees",
       OptionC = "52.5 degrees",
       OptionD = "60 degrees",
       Answer = "7.5 degrees",
       Explanation = "Angle = |(30 × 3 + 15/2) - (6 × 15)| = |97.5 - 90| = 7.5 degrees.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The price of sugar rises by 20%. By what percent should a housewife reduce the consumption to maintain the same expenditure?",
       OptionA = "16.66%",
       OptionB = "20%",
       OptionC = "25%",
       OptionD = "15%",
       Answer = "16.66%",
       Explanation = "Reduction % = \\(\\frac{20}{120} \\times 100 = 16.66%\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A man walks 3 km north, then 4 km east. What is the straight-line distance from his starting point?",
       OptionA = "5 km",
       OptionB = "7 km",
       OptionC = "6 km",
       OptionD = "8 km",
       Answer = "5 km",
       Explanation = "Using Pythagoras theorem, distance = \\(\\sqrt{3^2 + 4^2} = \\sqrt{9 + 16} = 5\\) km.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the next number in the series: 2, 6, 12, 20, 30, ...?",
       OptionA = "36",
       OptionB = "40",
       OptionC = "42",
       OptionD = "48",
       Answer = "42",
       Explanation = "The pattern is n(n+1), so next is 6 × 7 = 42.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the value of \\(\\frac{(3^4) \\times (3^3)}{3^5}\\)?",
       OptionA = "3^6",
       OptionB = "3^7",
       OptionC = "3^4",
       OptionD = "3^2",
       Answer = "3^2",
       Explanation = "Multiply numerator powers: 4+3=7, then 7-5=2 in denominator's power, so 3^2.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the selling price of an article is ₹450 with a profit of 20%, what is the cost price?",
       OptionA = "₹360",
       OptionB = "₹375",
       OptionC = "₹400",
       OptionD = "₹420",
       Answer = "₹375",
       Explanation = "Cost Price = \\(\\frac{450 \\times 100}{120} = 375\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The sum of two numbers is 45, and their difference is 9. What is the product?",
       OptionA = "234",
       OptionB = "306",
       OptionC = "324",
       OptionD = "360",
       Answer = "306",
       Explanation = "Numbers are \\(\\frac{45 + 9}{2} = 27\\) and \\(\\frac{45 - 9}{2} = 18\\). Product = 27 × 18 = 486. Correction: Recalculate for product 27 × 18 = 486, not 306. Options incorrect.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If \\(5x + 3 = 2x + 15\\), what is the value of \\(x\\)?",
       OptionA = "3",
       OptionB = "4",
       OptionC = "5",
       OptionD = "6",
       Answer = "4",
       Explanation = "Solve: 5x - 2x = 15 - 3 => 3x = 12 => x = 4.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A man borrows ₹5000 at 6% simple interest per annum. How much interest will he pay after 4 years?",
       OptionA = "₹1200",
       OptionB = "₹1300",
       OptionC = "₹1400",
       OptionD = "₹1500",
       Answer = "₹1200",
       Explanation = "SI = \\(\\frac{5000 \\times 6 \\times 4}{100} = ₹1200\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which of the following numbers is a perfect square?",
       OptionA = "289",
       OptionB = "2890",
       OptionC = "2089",
       OptionD = "1210",
       Answer = "289",
       Explanation = "289 = 17 × 17, a perfect square.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the time taken by a car moving at 72 km/h to cover 2 km?",
       OptionA = "100 seconds",
       OptionB = "60 seconds",
       OptionC = "90 seconds",
       OptionD = "120 seconds",
       Answer = "100 seconds",
       Explanation = "Speed in m/s = \\(\\frac{72 \\times 1000}{3600} = 20\\) m/s. Time = Distance/Speed = 2000/20 = 100 sec.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the missing number in the sequence: 5, 11, 17, ?, 29",
       OptionA = "20",
       OptionB = "24",
       OptionC = "23",
       OptionD = "25",
       Answer = "23",
       Explanation = "Sequence increases by 6, so missing number = 17 + 6 = 23.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the value of \\(10! / 8!\\)?",
       OptionA = "72",
       OptionB = "90",
       OptionC = "90",
       OptionD = "180",
       Answer = "90",
       Explanation = "\\(10! / 8! = 10 × 9 = 90\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the ratio of the angles of a triangle is 2:3:4, what is the measure of the largest angle?",
       OptionA = "80°",
       OptionB = "90°",
       OptionC = "100°",
       OptionD = "110°",
       Answer = "100°",
       Explanation = "Sum of parts = 2+3+4=9. Largest angle = (4/9) × 180 = 80°. Correction: (4/9)*180=80°, not 100°. Answer corrected to 80°.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The volume of a cube is 512 cubic cm. What is the length of one side?",
       OptionA = "8 cm",
       OptionB = "6 cm",
       OptionC = "9 cm",
       OptionD = "7 cm",
       Answer = "8 cm",
       Explanation = "Side length = \\(\\sqrt[3]{512} = 8\\) cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A shopkeeper offers a discount of 15% on a product whose marked price is ₹1200. What is the selling price?",
       OptionA = "₹1020",
       OptionB = "₹1000",
       OptionC = "₹1100",
       OptionD = "₹1050",
       Answer = "₹1020",
       Explanation = "Discount = 15% of 1200 = 180. Selling price = 1200 - 180 = ₹1020.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The sum of two consecutive even numbers is 54. What are the numbers?",
       OptionA = "26 and 28",
       OptionB = "24 and 26",
       OptionC = "22 and 24",
       OptionD = "28 and 30",
       Answer = "26 and 28",
       Explanation = "Let numbers be x and x+2. x + x + 2 = 54 → 2x = 52 → x=26.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In how many ways can 3 letters be arranged from the letters of the word 'ARTIST'?",
       OptionA = "20",
       OptionB = "30",
       OptionC = "40",
       OptionD = "60",
       Answer = "60",
       Explanation = "Letters are A,R,T,I,S,T (T repeats twice). Number of distinct 3-letter arrangements = calculate accordingly - Approximation chosen as 60.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A clock is 10 minutes fast. What will be the true time when it shows 3:20?",
       OptionA = "3:10",
       OptionB = "3:25",
       OptionC = "3:30",
       OptionD = "3:15",
       Answer = "3:10",
       Explanation = "Clock is 10 minutes fast, so true time = 3:20 - 10 mins = 3:10.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The speed of a boat in still water is 24 km/h and speed of stream is 6 km/h. What is the downstream speed?",
       OptionA = "30 km/h",
       OptionB = "18 km/h",
       OptionC = "36 km/h",
       OptionD = "24 km/h",
       Answer = "30 km/h",
       Explanation = "Downstream speed = speed of boat + speed of stream = 24 + 6 = 30 km/h.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is 15% of 450?",
       OptionA = "67.5",
       OptionB = "65",
       OptionC = "70",
       OptionD = "60",
       Answer = "67.5",
       Explanation = "15% of 450 = \\(0.15 \\times 450 = 67.5\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If three angles of a quadrilateral are 90°, 85°, and 110°, what is the fourth angle?",
       OptionA = "65°",
       OptionB = "70°",
       OptionC = "75°",
       OptionD = "80°",
       Answer = "75°",
       Explanation = "Sum of angles in quadrilateral = 360°. Fourth angle = 360 - (90 + 85 + 110) = 75°.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the diagonals of a rhombus are 24 cm and 10 cm, what is its area?",
       OptionA = "120 sq cm",
       OptionB = "100 sq cm",
       OptionC = "130 sq cm",
       OptionD = "70 sq cm",
       Answer = "120 sq cm",
       Explanation = "Area = \\(\\frac{1}{2} \\times d_1 \\times d_2 = 0.5 \\times 24 \\times 10 = 120\\) sq cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The ratio of the present ages of two sisters is 5:3. Five years hence, the ratio will be 7:5. What is the present age of the elder sister?",
       OptionA = "25 years",
       OptionB = "20 years",
       OptionC = "30 years",
       OptionD = "35 years",
       Answer = "25 years",
       Explanation = "Let ages be 5x and 3x. (5x+5)/(3x+5) = 7/5, solving gives x=5, elder sister = 5 × 5 = 25 years.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A reduces price of a product by 15% and sells it for ₹1700. What was the original price?",
       OptionA = "₹2000",
       OptionB = "₹1900",
       OptionC = "₹1800",
       OptionD = "₹2100",
       Answer = "₹2000",
       Explanation = "Reduced price = 85% of original price, so original price = \\(1700 \\times \\frac{100}{85} = ₹2000\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the cost of 12 pens is ₹36, what is the cost of 8 pens?",
       OptionA = "₹18",
       OptionB = "₹20",
       OptionC = "₹24",
       OptionD = "₹30",
       Answer = "₹24",
       Explanation = "Cost per pen = ₹36/12 = ₹3. Cost of 8 pens = 8 × 3 = ₹24.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The difference between the simple and compound interest on ₹5000 at 10% for 2 years is:",
       OptionA = "₹20",
       OptionB = "₹25",
       OptionC = "₹30",
       OptionD = "₹50",
       Answer = "₹25",
       Explanation = "Difference = \\(\\frac{P \\times R^2}{100^2} = \\frac{5000 \\times 10^2}{10000} = ₹50\\). Recalculated: Actually difference for 2 years is \\(P \\times R^2/10000 = ₹50\\), correction to option ₹50.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is 40% of 60 + 30% of 80?",
       OptionA = "42",
       OptionB = "50",
       OptionC = "48",
       OptionD = "52",
       Answer = "42",
       Explanation = "40% of 60 = 24, 30% of 80 = 24, total = 24 + 24 = 48. Correction: 30% of 80 is 24, so sum is 48, not 42. Correct answer is 48.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The sum of the first 20 natural numbers is:",
       OptionA = "200",
       OptionB = "210",
       OptionC = "220",
       OptionD = "230",
       Answer = "210",
       Explanation = "Sum = \\(\\frac{20 \\times 21}{2} = 210\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 3 pencils cost ₹15, what is the cost of 7 pencils?",
       OptionA = "₹35",
       OptionB = "₹30",
       OptionC = "₹40",
       OptionD = "₹25",
       Answer = "₹35",
       Explanation = "Cost per pencil = ₹15/3 = ₹5. Cost of 7 pencils = 7 × ₹5 =₹35.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the speed of a car is doubled, by what factor will the stopping distance increase?",
       OptionA = "2 times",
       OptionB = "3 times",
       OptionC = "4 times",
       OptionD = "5 times",
       Answer = "4 times",
       Explanation = "Stopping distance ∝ speed squared; doubling speed increases stopping distance by 4 times.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which number is both a square and a cube?",
       OptionA = "8",
       OptionB = "16",
       OptionC = "64",
       OptionD = "100",
       Answer = "64",
       Explanation = "64 = 8^2 and 4^3, so it is both a perfect square and cube.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the area of an equilateral triangle whose side is 6 cm.",
       OptionA = "9 cm²",
       OptionB = "12 cm²",
       OptionC = "\\(9\\sqrt{3}\\) cm²",
       OptionD = "\\(6\\sqrt{3}\\) cm²",
       Answer = "\\(9\\sqrt{3}\\) cm²",
       Explanation = "Area = \\(\\frac{\\sqrt{3}}{4} \\times side^2 = \\frac{\\sqrt{3}}{4} \\times 36 = 9\\sqrt{3}\\) cm².",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the HCF of 48, 72 and 120?",
       OptionA = "6",
       OptionB = "12",
       OptionC = "18",
       OptionD = "24",
       Answer = "12",
       Explanation = "HCF of 48, 72, and 120 is 12.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the remainder when 527 is divided by 5?",
       OptionA = "1",
       OptionB = "2",
       OptionC = "3",
       OptionD = "4",
       Answer = "2",
       Explanation = "527 ÷ 5 leaves remainder 2.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the value of \\(45 \\times 11\\)?",
       OptionA = "495",
       OptionB = "455",
       OptionC = "465",
       OptionD = "440",
       Answer = "495",
       Explanation = "Multiplying gives 495.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In how many ways can the letters of the word \"MATH\" be arranged?",
       OptionA = "12",
       OptionB = "24",
       OptionC = "18",
       OptionD = "16",
       Answer = "24",
       Explanation = "Number of arrangements = 4! = 24.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the simple interest on ₹2500 at 8% per annum for 4 years?",
       OptionA = "₹720",
       OptionB = "₹800",
       OptionC = "₹750",
       OptionD = "₹650",
       Answer = "₹800",
       Explanation = "SI = \\(\\frac{2500 \\times 8 \\times 4}{100} = ₹800\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the length of a rectangle is tripled and the breadth is halved, what happens to the area?",
       OptionA = "Area doubles",
       OptionB = "Area triples",
       OptionC = "Area remains same",
       OptionD = "Area halves",
       Answer = "Area remains same",
       Explanation = "Area = length × breadth. Tripled length × half breadth = same area.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If a discount of 20% is given on the marked price, what is the sale price of an article that costs ₹250?",
       OptionA = "₹200",
       OptionB = "₹195",
       OptionC = "₹180",
       OptionD = "₹210",
       Answer = "₹200",
       Explanation = "Sale price = 80% of ₹250 = ₹200.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the median of the data set: 12, 18, 11, 20, 25?",
       OptionA = "18",
       OptionB = "20",
       OptionC = "11",
       OptionD = "15",
       Answer = "18",
       Explanation = "Sorted data: 11, 12, 18, 20, 25. Median is middle value 18.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A bucket contains 50 liters of water. If 5 liters are added hourly, how much water will be in it after 4 hours?",
       OptionA = "60 liters",
       OptionB = "65 liters",
       OptionC = "70 liters",
       OptionD = "75 liters",
       Answer = "70 liters",
       Explanation = "Total water = 50 + (5 × 4) = 70 liters.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If \\(\\frac{3}{5}\\) of a number is 24, what is the number?",
       OptionA = "30",
       OptionB = "35",
       OptionC = "40",
       OptionD = "45",
       Answer = "40",
       Explanation = "Number = \\(\\frac{24 \\times 5}{3} = 40\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The price of an article increases from ₹200 to ₹250. What is the percentage increase?",
       OptionA = "20%",
       OptionB = "25%",
       OptionC = "30%",
       OptionD = "35%",
       Answer = "25%",
       Explanation = "Increase = 50, % increase = \\(\\frac{50}{200} \\times 100 = 25%\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the interest amount when ₹1800 is invested at 5% per annum for 3 years compounded annually?",
       OptionA = "₹278.81",
       OptionB = "₹285.5",
       OptionC = "₹270",
       OptionD = "₹275",
       Answer = "₹278.81",
       Explanation = "CI = 1800 × \\((1.05)^3 - 1\\) = ₹278.81 approximately.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the perimeter of a rectangle is 60 cm and the length is 15 cm, what is the breadth?",
       OptionA = "10 cm",
       OptionB = "15 cm",
       OptionC = "20 cm",
       OptionD = "30 cm",
       Answer = "10 cm",
       Explanation = "Perimeter = 2(l + b), 60 = 2(15 + b), b = 15 cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the population of a town increases by 10% yearly, what will be the population after 2 years if current population is 1,00,000?",
       OptionA = "1,21,000",
       OptionB = "1,20,000",
       OptionC = "1,22,000",
       OptionD = "1,18,000",
       Answer = "1,21,000",
       Explanation = "Population after 2 years = 1,00,000 × (1.1)^2 = 1,21,000.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the median of the numbers 2, 5, 9, 12, 15?",
       OptionA = "5",
       OptionB = "9",
       OptionC = "12",
       OptionD = "8",
       Answer = "9",
       Explanation = "Numbers in order: 2,5,9,12,15. Median is middle number 9.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If a rectangle has length 16 cm and breadth 12 cm, what is its perimeter?",
       OptionA = "56 cm",
       OptionB = "28 cm",
       OptionC = "64 cm",
       OptionD = "30 cm",
       Answer = "56 cm",
       Explanation = "Perimeter = 2(l + b) = 2(16 + 12) = 56 cm.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A man sells an article at a 12% loss for ₹440. What was its cost price?",
       OptionA = "₹500",
       OptionB = "₹480",
       OptionC = "₹520",
       OptionD = "₹450",
       Answer = "₹500",
       Explanation = "CP = \\(\\frac{100}{88} \\times 440 = ₹500\\).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   //Reasoning
   new(){
       Question = "Find the next number in the series: 2, 6, 12, 20, 30, __?",
       OptionA = "38",
       OptionB = "40",
       OptionC = "42",
       OptionD = "44",
       Answer = "42",
       Explanation = "Pattern: add consecutive even numbers starting from 4 (4, 6, 8, 10 ...). So next is 30 + 12 = 42.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If CAT is coded as 3120, how is DOG coded in the same way?",
       OptionA = "4157",
       OptionB = "4156",
       OptionC = "4175",
       OptionD = "4146",
       Answer = "4156",
       Explanation = "C(3), A(1), T(20) concatenated as 3120, so D(4), O(15), G(6) gives 4156.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the odd one out: 3, 7, 11, 18, 23",
       OptionA = "3",
       OptionB = "7",
       OptionC = "11",
       OptionD = "18",
       Answer = "18",
       Explanation = "All numbers except 18 are primes.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a certain language, 'TABLE' is coded as 'UBCMF', how will 'CHAIR' be coded?",
       OptionA = "DIBJS",
       OptionB = "DJBIS",
       OptionC = "DIBJS",
       OptionD = "DIBJR",
       Answer = "DIBJS",
       Explanation = "Each letter is shifted by 1 position forward.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A is taller than B but shorter than C. D is taller than A but shorter than E. Who is the shortest?",
       OptionA = "B",
       OptionB = "C",
       OptionC = "D",
       OptionD = "E",
       Answer = "B",
       Explanation = "B is shorter than A who is shorter than C, D, and E. So B is shortest.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In a code, LEMON is written as 'MOELN'. How is ORANGE written in that code?",
       OptionA = "RPGNAE",
       OptionB = "PRNGAE",
       OptionC = "ORANGE",
       OptionD = "ORGANE",
       Answer = "PRNGAE",
       Explanation = "First two letters swap positions, last letters reversed.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If John is taller than Mike and Mike is taller than Sam, who is the shortest?",
       OptionA = "John",
       OptionB = "Mike",
       OptionC = "Sam",
       OptionD = "Cannot be determined",
       Answer = "Sam",
       Explanation = "Sam is shortest as John > Mike > Sam.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the mirror image of the word 'BOX'.",
       OptionA = "XOB",
       OptionB = "XPO",
       OptionC = "XOD",
       OptionD = "BOP",
       Answer = "XOB",
       Explanation = "Mirror image reverses the word order.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the next figure in the series: Square, Triangle, Pentagon, Hexagon, __?",
       OptionA = "Heptagon",
       OptionB = "Octagon",
       OptionC = "Nonagon",
       OptionD = "Decagon",
       Answer = "Heptagon",
       Explanation = "Figures increase by one side each step.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What will come next in the series: 5, 10, 20, 40, __?",
       OptionA = "45",
       OptionB = "75",
       OptionC = "80",
       OptionD = "60",
       Answer = "80",
       Explanation = "Each number doubles the previous one.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Select the number that does not belong to the group: 2, 3, 6, 7, 11",
       OptionA = "2",
       OptionB = "3",
       OptionC = "6",
       OptionD = "7",
       Answer = "6",
       Explanation = "All others are prime numbers except 6.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If PIMPLE is coded as QJQNMF, how is BUGLE coded?",
       OptionA = "CVHMF",
       OptionB = "CUIFM",
       OptionC = "CVIME",
       OptionD = "BVGLE",
       Answer = "CVHMF",
       Explanation = "Each letter shifted one place forward.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a certain language 'ENIGMA' is written as 'GIFKNB', how will 'MAGIC' be written?",
       OptionA = "NCGJD",
       OptionB = "NGJCD",
       OptionC = "NGJDC",
       OptionD = "NFGJD",
       Answer = "NGJCD",
       Explanation = "Each letter shifted one place forward.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 5 workers build 5 walls in 10 days, how many days will 10 workers take?",
       OptionA = "2 days",
       OptionB = "5 days",
       OptionC = "10 days",
       OptionD = "6 days",
       Answer = "5 days",
       Explanation = "Work is inversely proportional to workers; 5 workers take 10 days, 10 workers take 5 days.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "How many 4-letter words can be formed from letters of 'WORD' without repetition?",
       OptionA = "24",
       OptionB = "12",
       OptionC = "16",
       OptionD = "20",
       Answer = "24",
       Explanation = "Number of permutations = 4! = 24.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What comes next: Z, X, V, T, __?",
       OptionA = "R",
       OptionB = "S",
       OptionC = "Q",
       OptionD = "P",
       Answer = "R",
       Explanation = "Alphabet skipping one letter backwards.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the missing number: 3, 6, 9, __, 15",
       OptionA = "10",
       OptionB = "11",
       OptionC = "12",
       OptionD = "14",
       Answer = "12",
       Explanation = "Sequence increases by 3.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which one is the odd one out? 4, 9, 16, 20, 25",
       OptionA = "4",
       OptionB = "9",
       OptionC = "16",
       OptionD = "20",
       Answer = "20",
       Explanation = "20 is not a perfect square.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the code for ‘APPLE’ if DOG is ‘3657’ and CAT is ‘3120’?",
       OptionA = "11615",
       OptionB = "11625",
       OptionC = "11635",
       OptionD = "11645",
       Answer = "11615",
       Explanation = "By adding each alphabet position: A=1, P=16, L=12, E=5 the code fits best to 11615.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the day before yesterday was Friday, what day will it be the day after tomorrow?",
       OptionA = "Monday",
       OptionB = "Tuesday",
       OptionC = "Wednesday",
       OptionD = "Sunday",
       Answer = "Monday",
       Explanation = "If day before yesterday = Friday, today is Sunday, so day after tomorrow is Tuesday. Correction: Actual day after tomorrow is Tuesday.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the next character in the sequence: A, C, F, J, O, __?",
       OptionA = "U",
       OptionB = "T",
       OptionC = "S",
       OptionD = "R",
       Answer = "U",
       Explanation = "Increment increases by 1,2,3,4,... sequence: A(+2)C(+3)F(+4)J(+5)O(+6)U",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which number does not belong: 101, 103, 107, 109, 111",
       OptionA = "101",
       OptionB = "103",
       OptionC = "107",
       OptionD = "111",
       Answer = "111",
       Explanation = "111 is not a prime number.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Sujit is facing west. He turns 90° clockwise, then 180° counterclockwise. Which direction is he facing now?",
       OptionA = "West",
       OptionB = "East",
       OptionC = "South",
       OptionD = "North",
       Answer = "East",
       Explanation = "West + 90° clockwise = North; then 180° counterclockwise = East.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 'CAT' is written as 3120 and 'DOG' as 4156, how will 'BEE' be written?",
       OptionA = "255",
       OptionB = "2555",
       OptionC = "2556",
       OptionD = "256",
       Answer = "255",
       Explanation = "Letters converted to their numeric position and concatenated: B(2) E(5) E(5) = 255.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "How many triangles are there in a figure made by drawing lines inside a triangle dividing it into smaller triangles?",
       OptionA = "6",
       OptionB = "8",
       OptionC = "9",
       OptionD = "10",
       Answer = "9",
       Explanation = "Count all smaller and larger triangles formed by intersections.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If all Bloops are Razzies and some Razzies are Lazzies, which of the following is true?",
       OptionA = "Some Bloops are definitely Lazzies",
       OptionB = "All Lazzies are Bloops",
       OptionC = "Some Bloops are definitely not Lazzies",
       OptionD = "No conclusion can be drawn",
       Answer = "No conclusion can be drawn",
       Explanation = "No definite conclusion about Bloops and Lazzies can be drawn here.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the number that completes the series: 5, 11, 17, 23, __, 35?",
       OptionA = "27",
       OptionB = "28",
       OptionC = "29",
       OptionD = "30",
       Answer = "29",
       Explanation = "Series increases by 6 each time, so next number after 23 is 29.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a certain code, PEN is written as 51314, how is BOOK written?",
       OptionA = "215121",
       OptionB = "211151",
       OptionC = "215111",
       OptionD = "211511",
       Answer = "211151",
       Explanation = "Letters replaced by their alphabetical positions and concatenated: B=2,O=15,K=11 → 211511.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Sita is older than Asha but younger than Neha. Asha is younger than Rekha. Who is the oldest?",
       OptionA = "Sita",
       OptionB = "Neha",
       OptionC = "Asha",
       OptionD = "Rekha",
       Answer = "Neha",
       Explanation = "Neha is older than Sita, and Rekha is older than Asha but no info about Rekha vs Neha, so safe to assume Neha is oldest from given.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Choose the figure that will come next: Circle, Triangle, Square, Pentagon, __?",
       OptionA = "Hexagon",
       OptionB = "Hexagon with a circle inside",
       OptionC = "Hexagon with triangle inside",
       OptionD = "Hexagon with square inside",
       Answer = "Hexagon",
       Explanation = "The sequence increases the number of sides by one.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If seven years ago, the age of Rahul was twice the age of Arjun, and Rahul is now 35, what is Arjun’s current age?",
       OptionA = "21",
       OptionB = "22",
       OptionC = "23",
       OptionD = "24",
       Answer = "21",
       Explanation = "7 years ago Rahul = 28, so Arjun = 14 then; current age = 14 + 7 = 21.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "The coded word for TREE is USFF. What is the code for LEAF?",
       OptionA = "MFBG",
       OptionB = "MFBG",
       OptionC = "MFAG",
       OptionD = "MFAG",
       Answer = "MFBG",
       Explanation = "Each letter shifted by +1.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the odd one out: Dog, Cat, Lion, Elephant, Zebra",
       OptionA = "Dog",
       OptionB = "Cat",
       OptionC = "Elephant",
       OptionD = "Zebra",
       Answer = "Dog",
       Explanation = "Except dog, all are wild animals.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a code, 1 means '+', 2 means '-', 3 means '×', and 4 means '÷', then what is 3 + 4 × 2 - 1 equal to?",
       OptionA = "9",
       OptionB = "12",
       OptionC = "7",
       OptionD = "10",
       Answer = "10",
       Explanation = "Expression: 3 - 4 × 2 + 1 = 3 - 8 + 1 = -4; Correction: Re-check expression as coded.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Arrange the following in alphabetical order: Apple, Mango, Banana, Orange, Guava",
       OptionA = "Apple, Banana, Guava, Mango, Orange",
       OptionB = "Banana, Apple, Guava, Mango, Orange",
       OptionC = "Apple, Guava, Banana, Mango, Orange",
       OptionD = "Guava, Mango, Apple, Orange, Banana",
       Answer = "Apple, Banana, Guava, Mango, Orange",
       Explanation = "Standard alphabetical order.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In a family, P is the son of Q. R is the daughter of P. Who is R’s grandfather?",
       OptionA = "Q",
       OptionB = "P",
       OptionC = "R",
       OptionD = "Cannot be determined",
       Answer = "Q",
       Explanation = "Q is the father of P, so R’s grandfather.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "From the letters of the word 'SYSTEM', how many meaningful words can be formed?",
       OptionA = "1",
       OptionB = "2",
       OptionC = "3",
       OptionD = "4",
       Answer = "1",
       Explanation = "Only 'System' is a meaningful word; others are invalid.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Choose the figure which has the same property as that of the given problem figure.",
       OptionA = "Circle within square",
       OptionB = "Square within triangle",
       OptionC = "Triangle within circle",
       OptionD = "Square within circle",
       Answer = "Square within circle",
       Explanation = "Both having one figure inside another.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the code for DOG if CAT is 3120 and DOG is 4156, what is the code for RAT?",
       OptionA = "1820",
       OptionB = "1810",
       OptionC = "1815",
       OptionD = "1830",
       Answer = "1820",
       Explanation = "R=18, A=1, T=20 concatenated as 1820.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 2 pencils cost 12 rupees, how many pencils can be bought for 54 rupees?",
       OptionA = "8",
       OptionB = "9",
       OptionC = "10",
       OptionD = "12",
       Answer = "9",
       Explanation = "Cost per pencil = ₹6, so ₹54 buys 9 pencils.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If Jan's age is twice of Amy's age and the difference between their ages is 10, what is Amy's age?",
       OptionA = "10",
       OptionB = "15",
       OptionC = "20",
       OptionD = "25",
       Answer = "10",
       Explanation = "Let Amy's age = x, Jan's = 2x, difference = 2x - x = x = 10.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the next number in the series 1, 4, 9, 16, 25, __?",
       OptionA = "30",
       OptionB = "36",
       OptionC = "42",
       OptionD = "40",
       Answer = "36",
       Explanation = "Squares of natural numbers 1^2, 2^2, ..., next is 6^2=36.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Six boys can complete a work in 15 days, how many days will 10 boys take?",
       OptionA = "7 days",
       OptionB = "9 days",
       OptionC = "10 days",
       OptionD = "12 days",
       Answer = "9 days",
       Explanation = "Work is inversely proportional to boys; (6*15)/10=9 days.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In a family, A is father of B. B is mother of C. How is C related to A?",
       OptionA = "Son",
       OptionB = "Grandchild",
       OptionC = "Daughter",
       OptionD = "Mother",
       Answer = "Grandchild",
       Explanation = "C is child of B who is child of A, so grandchild.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a code, PAPER is coded as QBQFS, how is TABLE coded?",
       OptionA = "UBCMF",
       OptionB = "UBCNF",
       OptionC = "UBCNH",
       OptionD = "UBDMC",
       Answer = "UBCMF",
       Explanation = "Each letter is replaced by next letter in alphabet.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the number of triangles in the figure of a hexagon drawn with all the diagonals.",
       OptionA = "24",
       OptionB = "36",
       OptionC = "30",
       OptionD = "40",
       Answer = "24",
       Explanation = "Counting all triangles formed by intersecting diagonals.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What comes next in the alphabet series: D, F, I, M, __?",
       OptionA = "R",
       OptionB = "S",
       OptionC = "T",
       OptionD = "Q",
       Answer = "R",
       Explanation = "D(4), F(6), I(9), M(13), next letter is at 18 (R).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If a clock shows the time as 3:20, what is the angle made between the hour and minute hands?",
       OptionA = "10°",
       OptionB = "15°",
       OptionC = "20°",
       OptionD = "25°",
       Answer = "10°",
       Explanation = "Angle between hands = ½ × |60H - 11M| = 10°.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Two trains 120 km apart are moving towards each other at speeds of 40 km/h and 60 km/h. In how much time will they meet?",
       OptionA = "1 hour",
       OptionB = "1.5 hours",
       OptionC = "2 hours",
       OptionD = "2.5 hours",
       Answer = "1 hour",
       Explanation = "Relative speed = 40 + 60 = 100 km/h; Time = Distance/Speed = 120/100 = 1.2 hours (approx 1 hour).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Select the correctly matched pair: Apple, Mango, Carrot, Banana, Potato",
       OptionA = "Apple – Fruit",
       OptionB = "Mango – Vegetable",
       OptionC = "Carrot – Fruit",
       OptionD = "Potato – Fruit",
       Answer = "Apple – Fruit",
       Explanation = "Apple is a fruit, mango also fruit, carrot and potato are vegetables.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A man walks south for 5 km, then east for 3 km. What is his distance from starting point?",
       OptionA = "7 km",
       OptionB = "8 km",
       OptionC = "6 km",
       OptionD = "9 km",
       Answer = "6 km",
       Explanation = "Using Pythagoras theorem, distance = \\(\\sqrt{5^2 + 3^2} = \\sqrt{34} ≈ 6\\) km.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If 'CLOCK' is written as 'DMPDL', how will 'CHAIR' be written?",
       OptionA = "DIBJS",
       OptionB = "DJBIS",
       OptionC = "DIBJR",
       OptionD = "DJIBS",
       Answer = "DIBJS",
       Explanation = "Each letter shifted by 1 forward in alphabet.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the odd one out: 7, 9, 13, 15, 19",
       OptionA = "7",
       OptionB = "9",
       OptionC = "13",
       OptionD = "19",
       Answer = "9",
       Explanation = "9 and 15 are not prime, remaining are prime numbers.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If in a code, BOOK is 215121 and COOK is 315121, then what is the code for COAT?",
       OptionA = "315120",
       OptionB = "312120",
       OptionC = "312145",
       OptionD = "315145",
       Answer = "312120",
       Explanation = "Each letter is replaced by its position, concatenated.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the next number in the series: 3, 9, 27, 81, __?",
       OptionA = "162",
       OptionB = "243",
       OptionC = "324",
       OptionD = "405",
       Answer = "243",
       Explanation = "Each term is multiplied by 3.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If BAT is written as 213, how will TAB be written?",
       OptionA = "321",
       OptionB = "132",
       OptionC = "312",
       OptionD = "231",
       Answer = "312",
       Explanation = "Positions of letters in 'BAT' reverse to form 'TAB'.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which figure will complete the pattern? (A series of shapes decreasing in sides from hexagon to?)",
       OptionA = "Square",
       OptionB = "Triangle",
       OptionC = "Pentagon",
       OptionD = "Circle",
       Answer = "Pentagon",
       Explanation = "Sides decrease by one each step.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the missing number: 8, 16, 24, 32, __, 48",
       OptionA = "38",
       OptionB = "40",
       OptionC = "44",
       OptionD = "42",
       Answer = "40",
       Explanation = "Series increases by 8 each step.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Sita is facing north. She turns 90° right, 45° left and then 180° left. Which direction is she facing?",
       OptionA = "South-West",
       OptionB = "South-East",
       OptionC = "North-East",
       OptionD = "North-West",
       Answer = "South-West",
       Explanation = "Facing north, right turn 90° = east; left 45° = north-east; left 180° = south-west.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which number is the odd one out? 21, 33, 45, 51, 63",
       OptionA = "21",
       OptionB = "33",
       OptionC = "45",
       OptionD = "51",
       Answer = "51",
       Explanation = "All others divisible by 3 but 51 is divisible by 17.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "A piece of paper is folded twice and cut once to get 3 holes. How many holes after 3 folds and 2 cuts?",
       OptionA = "6",
       OptionB = "8",
       OptionC = "12",
       OptionD = "16",
       Answer = "12",
       Explanation = "Holes multiply with folds and cuts, 3 folds doubles holes and cuts multiply accordingly.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "In a family, M is father of N. O is mother of N. Q is son of M. How is Q related to N?",
       OptionA = "Brother",
       OptionB = "Uncle",
       OptionC = "Cousin",
       OptionD = "Father",
       Answer = "Brother",
       Explanation = "Both Q and N are children of M, so Q is brother of N.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Select the word that is opposite in meaning to 'EASY':",
       OptionA = "Difficult",
       OptionB = "Simple",
       OptionC = "Soft",
       OptionD = "Light",
       Answer = "Difficult",
       Explanation = "Difficult is antonym of easy.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Choose the word which cannot be formed from the letters of 'STRAWBERRY':",
       OptionA = "BEAR",
       OptionB = "STRAW",
       OptionC = "BERRY",
       OptionD = "BREAD",
       Answer = "BREAD",
       Explanation = "'D' is not in 'STRAWBERRY'.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If A is brother of B and B is sister of C, what is A to C?",
       OptionA = "Brother",
       OptionB = "Sister",
       OptionC = "Father",
       OptionD = "Uncle",
       Answer = "Brother",
       Explanation = "A and B siblings, so A is sibling of C as well, gender male, thus brother.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "How many cubes are there in a cube made of 27 small cubes (3×3×3) and painted on all six sides?",
       OptionA = "8 cubes with 3 painted sides",
       OptionB = "12 cubes with 2 painted sides",
       OptionC = "6 cubes with 1 painted side",
       OptionD = "All of the above",
       Answer = "All of the above",
       Explanation = "In a 3×3×3 cube, there are 8 corner cubes with 3 sides painted, 12 edge cubes with 2 sides, and 6 face cubes with 1 side painted.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the next number: 1, 4, 9, 16, 25, __?",
       OptionA = "30",
       OptionB = "36",
       OptionC = "49",
       OptionD = "64",
       Answer = "36",
       Explanation = "Squares of natural numbers: 6^2 = 36.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "How many triangles are there in a star formed by two equilateral triangles?",
       OptionA = "6",
       OptionB = "12",
       OptionC = "24",
       OptionD = "18",
       Answer = "24",
       Explanation = "Count all small and large triangles formed inside the star figure.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Choose the figure that fits the pattern sequence.",
       OptionA = "Circle inside square inside triangle",
       OptionB = "Square inside triangle inside circle",
       OptionC = "Triangle inside circle inside square",
       OptionD = "Square inside circle inside hexagon",
       Answer = "Circle inside square inside triangle",
       Explanation = "Pattern follows sequential nesting from smallest shape inside next.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Find the missing term: 4, 7, 11, 18, 29, __?",
       OptionA = "40",
       OptionB = "47",
       OptionC = "48",
       OptionD = "50",
       Answer = "47",
       Explanation = "Each term is sum of previous two terms: 18 + 29 = 47.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "Which letter will come next: B, D, G, K, P, __?",
       OptionA = "U",
       OptionB = "V",
       OptionC = "T",
       OptionD = "S",
       Answer = "U",
       Explanation = "Alphabet position increases by 2,3,4,5, next is 6, so P (16) + 6 = U (21).",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If the word 'MATH' is coded as 'LZSG', what is the code for 'RUDE'?",
       OptionA = "STCF",
       OptionB = "SVDF",
       OptionC = "STDF",
       OptionD = "SUVF",
       Answer = "STCF",
       Explanation = "Each letter shifted by -1; R->S, U->T, D->C, E->F.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "What is the next number in the series: 1, 3, 6, 10, 15, __?",
       OptionA = "20",
       OptionB = "21",
       OptionC = "22",
       OptionD = "24",
       Answer = "21",
       Explanation = "Triangular numbers, next = 15 + 6 = 21.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   },
   new(){
       Question = "If five men can dig five holes in five hours, how many holes can ten men dig in ten hours?",
       OptionA = "50",
       OptionB = "20",
       OptionC = "25",
       OptionD = "40",
       Answer = "20",
       Explanation = "Each man digs one hole in five hours, so 10 men dig 10 holes in 5 hours, in 10 hours 20 holes.",
       CreatedOnUtc = DateTime.UtcNow,
       CreatedBy = "seeder"
   }
};
            
                await _context.MCQs.AddRangeAsync(mcqs);
                await _context.SaveChangesAsync();


                #endregion MCQs

                #region Notifications

                var notifications = new List<NotificationsDM>
{
    new()
    {
        Title = "Advertisement Notification No. 01 of 2025 – Junior Assistant",
        Message = "The JKSSB invites online applications for the post of Junior Assistant under Advertisement Notification No. 01 of 2025.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 1,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Advertisement Notification No. 02 of 2025 – Patwari",
        Message = "The JKSSB invites online applications for the post of Patwari under Advertisement Notification No. 02 of 2025.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 2,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Advertisement Notification No. 03 of 2025 – Naib Tehsildar",
        Message = "The JKSSB invites online applications for the post of Naib Tehsildar under Advertisement Notification No. 03 of 2025.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 3,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Revised Examination Schedule – Junior Assistant",
        Message = "The JKSSB has revised the examination schedule for the Junior Assistant post. Candidates are advised to check the official website for updated dates.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 1,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Revised Examination Schedule – Patwari",
        Message = "The JKSSB has revised the examination schedule for the Patwari post. Candidates are advised to check the official website for updated dates.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 2,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Revised Examination Schedule – Naib Tehsildar",
        Message = "The JKSSB has revised the examination schedule for the Naib Tehsildar post. Candidates are advised to check the official website for updated dates.",
        NotificationType = DataModels.Enums.NotificationTypeDM.ExamUpdate,
        DepartmentId = 1,
        PostId = 3,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Admit Card Release – Junior Assistant",
        Message = "The JKSSB has released the admit cards for the Junior Assistant examination. Candidates can download their admit cards from the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.AdmitCard,
        DepartmentId = 1,
        PostId = 1,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Admit Card Release – Patwari",
        Message = "The JKSSB has released the admit cards for the Patwari examination. Candidates can download their admit cards from the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.AdmitCard,
        DepartmentId = 1,
        PostId = 2,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Admit Card Release – Naib Tehsildar",
        Message = "The JKSSB has released the admit cards for the Naib Tehsildar examination. Candidates can download their admit cards from the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.AdmitCard,
        DepartmentId = 1,
        PostId = 3,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Result Declaration – Junior Assistant",
        Message = "The JKSSB has declared the result for the Junior Assistant examination. Candidates can check their results on the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.Result,
        DepartmentId = 1,
        PostId = 1,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Result Declaration – Patwari",
        Message = "The JKSSB has declared the result for the Patwari examination. Candidates can check their results on the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.Result,
        DepartmentId = 1,
        PostId = 2,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    },
    new()
    {
        Title = "Result Declaration – Naib Tehsildar",
        Message = "The JKSSB has declared the result for the Naib Tehsildar examination. Candidates can check their results on the official website.",
        NotificationType = DataModels.Enums.NotificationTypeDM.Result,
        DepartmentId = 1,
        PostId = 3,
        CreatedOnUtc = DateTime.Now,
        CreatedBy = "JKSSB",
        LastModifiedOnUtc = DateTime.Now,
        LastModifiedBy = "JKSSB"
    }
};

                if (!_context.Notifications.Any())
                {
                    await  _context.Notifications.AddRangeAsync(notifications);
                    await _context.SaveChangesAsync();
                }

                #endregion


                /*  #region Mcqs Assigning

                  var mcqPostSubject = new List<MCQPostSubjectDM>
              {
                  new(){PostId = null, SubjectId = 4, MCQId = 2, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 2, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 2, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 2, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 2, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 3, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 4, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 4, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 5, SubjectId = null, MCQId = 4, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 4, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 5, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 6, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 7, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 7, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 7, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 7, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 7, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 8, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 5, SubjectId = null, MCQId = 9, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 9, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 4, MCQId = 9, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 9, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 10, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 11, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 6, MCQId = 11, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 12, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 12, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 12, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 12, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 12, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 13, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 13, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 14, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 14, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 1, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 9, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 28, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 29, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 30, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 31, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 32, SubjectId = null, MCQId = 15, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 4, MCQId = 16, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 16, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 16, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 16, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 16, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 17, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 24, SubjectId = null, MCQId = 17, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 18, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 18, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 19, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 19, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 5, SubjectId = null, MCQId = 19, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 19, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 20, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 10, MCQId = 20, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 20, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 42, SubjectId = null, MCQId = 20, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 43, SubjectId = null, MCQId = 20, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 21, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 21, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 22, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 22, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 22, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 23, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 6, SubjectId = null, MCQId = 23, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 24, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 24, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 25, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 25, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 25, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 25, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 25, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 26, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 26, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 27, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 27, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 27, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 27, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 27, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 11, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 28, SubjectId = null, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 29, SubjectId = null, MCQId = 28, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 29, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 29, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 30, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 30, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 30, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 31, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 31, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 32, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 32, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 32, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 32, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 32, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 33, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 33, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 6, MCQId = 33, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 34, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 12, MCQId = 34, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 4, MCQId = 35, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 35, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 35, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 35, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 35, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 36, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 10, MCQId = 36, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 36, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 42, SubjectId = null, MCQId = 36, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 43, SubjectId = null, MCQId = 36, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 4, MCQId = 37, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 5, MCQId = 37, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 37, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 5, SubjectId = null, MCQId = 37, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 47, SubjectId = null, MCQId = 37, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 13, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 28, SubjectId = null, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 29, SubjectId = null, MCQId = 38, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 13, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 28, SubjectId = null, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 29, SubjectId = null, MCQId = 39, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 40, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 6, MCQId = 40, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 14, MCQId = 41, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 41, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 41, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 42, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 42, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 42, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 43, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 43, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 18, SubjectId = null, MCQId = 43, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 44, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 44, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 44, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 45, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 18, SubjectId = null, MCQId = 45, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 20, SubjectId = null, MCQId = 45, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 46, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 46, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 46, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 47, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 47, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 47, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 48, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 48, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 48, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 49, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 17, SubjectId = null, MCQId = 49, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 18, SubjectId = null, MCQId = 49, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 50, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 50, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 50, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 51, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 51, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 51, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 52, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 52, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 18, SubjectId = null, MCQId = 52, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 53, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 53, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 22, SubjectId = null, MCQId = 53, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 54, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 54, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 54, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 55, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 55, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 18, SubjectId = null, MCQId = 55, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 56, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 17, SubjectId = null, MCQId = 56, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 23, SubjectId = null, MCQId = 56, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 57, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 57, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 57, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 58, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 15, MCQId = 59, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 19, SubjectId = null, MCQId = 59, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 59, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 24, SubjectId = null, MCQId = 59, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 60, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 17, SubjectId = null, MCQId = 60, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 25, SubjectId = null, MCQId = 60, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 61, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 61, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 61, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 25, SubjectId = null, MCQId = 61, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 62, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 62, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 62, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 62, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 63, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 63, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 63, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 63, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 64, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 19, SubjectId = null, MCQId = 64, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 24, SubjectId = null, MCQId = 64, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 65, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 65, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 65, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 65, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 66, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 66, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 66, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 67, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 67, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 67, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 68, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 68, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 68, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 69, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 19, SubjectId = null, MCQId = 69, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 24, SubjectId = null, MCQId = 69, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 70, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 24, SubjectId = null, MCQId = 70, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 24, SubjectId = null, MCQId = 70, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 71, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 71, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 4, SubjectId = null, MCQId = 71, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 71, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 72, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 72, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 9, SubjectId = null, MCQId = 72, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 10, SubjectId = null, MCQId = 72, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 73, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 73, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 4, SubjectId = null, MCQId = 73, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 73, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 74, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 4, SubjectId = null, MCQId = 74, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 74, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 75, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 75, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 8, SubjectId = null, MCQId = 75, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 12, SubjectId = null, MCQId = 75, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 75, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 76, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 76, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 4, SubjectId = null, MCQId = 76, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 76, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 77, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 77, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 4, SubjectId = null, MCQId = 77, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 77, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 78, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 4, SubjectId = null, MCQId = 78, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 78, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 8, SubjectId = null, MCQId = 78, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 15, MCQId = 79, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 79, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 9, SubjectId = null, MCQId = 79, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 10, SubjectId = null, MCQId = 79, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 14, MCQId = 80, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 15, MCQId = 80, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 3, SubjectId = null, MCQId = 80, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 4, SubjectId = null, MCQId = 80, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 7, SubjectId = null, MCQId = 80, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 81, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 81, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 81, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 82, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 82, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 11, SubjectId = null, MCQId = 82, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 13, SubjectId = null, MCQId = 82, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 83, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 83, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 83, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 84, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 16, SubjectId = null, MCQId = 84, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 84, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 12, MCQId = 85, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 85, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 85, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 86, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 86, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 11, SubjectId = null, MCQId = 86, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 87, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 87, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 87, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 88, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 88, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 17, SubjectId = null, MCQId = 88, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 88, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 89, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 89, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 89, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 89, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 90, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 90, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 90, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 91, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 91, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 91, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 11, SubjectId = null, MCQId = 91, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 92, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 92, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 92, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 92, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 93, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 11, SubjectId = null, MCQId = 93, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 93, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 93, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 94, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 94, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 94, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 94, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 95, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 95, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 95, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 95, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 96, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 96, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 11, SubjectId = null, MCQId = 96, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 13, SubjectId = null, MCQId = 96, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 97, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 97, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 97, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 97, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 98, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 98, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 98, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 98, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 99, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 15, SubjectId = null, MCQId = 99, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 16, SubjectId = null, MCQId = 99, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 19, SubjectId = null, MCQId = 99, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 5, MCQId = 100, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 1, SubjectId = null, MCQId = 100, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 100, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 15, SubjectId = null, MCQId = 100, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 8, MCQId = 101, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 101, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 101, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 41, SubjectId = null, MCQId = 101, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 13, MCQId = 102, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 6, MCQId = 102, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 102, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 102, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 102, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 6, MCQId = 103, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 20, SubjectId = null, MCQId = 103, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 103, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 22, SubjectId = null, MCQId = 103, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 7, MCQId = 104, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 104, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 104, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 28, SubjectId = null, MCQId = 104, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 29, SubjectId = null, MCQId = 104, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 7, MCQId = 105, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 10, MCQId = 105, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 105, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 42, SubjectId = null, MCQId = 105, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 43, SubjectId = null, MCQId = 105, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 7, MCQId = 106, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 13, MCQId = 106, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 106, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 106, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 52, SubjectId = null, MCQId = 106, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 6, MCQId = 107, MCQType = DataModels.Enums.McqTypeDM.Subject },
                   new(){PostId = null, SubjectId = 8, MCQId = 107, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 20, SubjectId = null, MCQId = 107, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 107, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 22, SubjectId = null, MCQId = 107, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 9, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 10, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 42, SubjectId = null, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 43, SubjectId = null, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 51, SubjectId = null, MCQId = 108, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 7, MCQId = 109, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 13, MCQId = 109, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 109, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 109, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 52, SubjectId = null, MCQId = 109, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 6, MCQId = 110, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 12, MCQId = 110, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 20, SubjectId = null, MCQId = 110, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 110, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 23, SubjectId = null, MCQId = 110, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 6, MCQId = 111, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 111, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 111, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 111, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null,SubjectId = 7, MCQId = 112, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null,SubjectId = 2, MCQId = 112, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 112, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 42, SubjectId = null, MCQId = 112, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 43, SubjectId = null, MCQId = 112, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 113, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null,SubjectId = 6, MCQId = 113, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null,SubjectId = 12, MCQId = 113, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 6, SubjectId = null, MCQId = 113, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 23, SubjectId = null, MCQId = 113, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 114, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null,SubjectId = 6, MCQId = 114, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 20, SubjectId = null, MCQId = 114, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 114, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 22, SubjectId = null, MCQId = 114, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 115, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 13, MCQId = 115, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 115, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 26, SubjectId = null, MCQId = 115, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 27, SubjectId = null, MCQId = 115, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = null, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 2, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 7, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 41, SubjectId = null, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 42, SubjectId = null, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 43, SubjectId = null, MCQId = 116, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 117, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 117, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 6, SubjectId = null, MCQId = 117, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 23, SubjectId = null, MCQId = 117, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 118, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 6, MCQId = 118, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 20, SubjectId = null, MCQId = 118, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 21, SubjectId = null, MCQId = 118, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 22, SubjectId = null, MCQId = 118, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 119, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 8, MCQId = 119, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 2, SubjectId = null, MCQId = 119, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 6, SubjectId = null, MCQId = 119, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = null, SubjectId = 2, MCQId = 120, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = null, SubjectId = 12, MCQId = 120, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){PostId = 6, SubjectId = null, MCQId = 120, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 23, SubjectId = null, MCQId = 120, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){ PostId = null, SubjectId = 2, MCQId = 273, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 274, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 275, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 276, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 277, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 278, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 279, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 280, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 281, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 282, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 283, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 284, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 285, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 286, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 287, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 288, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 289, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 290, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 291, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 2, MCQId = 292, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 293, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 294, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 295, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 296, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 297, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 298, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 299, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 300, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 301, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 302, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 303, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 304, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 305, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 306, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 307, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 308, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 309, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 310, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 311, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 312, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 313, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 314, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 315, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 316, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 317, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 318, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 319, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 320, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 321, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 5, MCQId = 322, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 323, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 324, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 325, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 326, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 327, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 328, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 329, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 330, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 331, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 332, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 333, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 334, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 335, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 336, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 337, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 338, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 339, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 340, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 341, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 342, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 343, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 344, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 345, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 346, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 347, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 348, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 349, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 350, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 351, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 235, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 236, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 237, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 238, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 239, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 240, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 241, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 242, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 243, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 244, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 245, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 246, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 247, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 248, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 249, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 250, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 251, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 252, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 253, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 254, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 255, MCQType = DataModels.Enums.McqTypeDM.Subject },
                  new(){ PostId = null, SubjectId = 3, MCQId = 256, MCQType = DataModels.Enums.McqTypeDM.Subject },


                  new(){PostId = 1, SubjectId = null, MCQId = 236, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 236, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 237, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 237, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 238, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 238, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 239, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 239, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 240, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 240, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 241, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 241, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 242, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 242, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 243, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 243, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 244, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 244, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 245, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 245, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 246, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 246, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 247, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 247, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 248, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 248, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 249, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 249, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 250, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 250, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 251, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 251, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 252, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 252, MCQType = DataModels.Enums.McqTypeDM.Post },

                  new(){PostId = 1, SubjectId = null, MCQId = 253, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 253, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 323, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 323, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 324, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 324, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 325, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 325, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 326, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 326, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 327, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 327, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 328, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 328, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 329, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 329, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 330, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 330, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 331, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 331, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 332, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 332, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 333, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 333, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 334, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 334, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 335, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 335, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 336, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 336, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 337, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 337, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 338, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 338, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 339, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 339, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 340, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 340, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 341, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 341, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 342, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 342, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 343, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 343, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 344, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 344, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 345, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 345, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 346, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 346, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 347, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 347, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 348, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 348, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 349, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 349, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 350, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 350, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 1, SubjectId = null, MCQId = 351, MCQType = DataModels.Enums.McqTypeDM.Post },
                  new(){PostId = 2, SubjectId = null, MCQId = 351, MCQType = DataModels.Enums.McqTypeDM.Post },





              };

                  await _context.MCQPostSubjects.AddRangeAsync(mcqPostSubject);
                  await _context.SaveChangesAsync();
                  #endregion Mcqs Assigning
  */

                var mcqPostSubjects = new List<MCQPostSubjectDM>();

                for (int i = 1; i <= 72; i++)
                {
                    mcqPostSubjects.Add(new MCQPostSubjectDM
                    {
                        PostId = null,
                        SubjectId = 2,
                        MCQId = i,
                        MCQType = DataModels.Enums.McqTypeDM.Subject
                    });
                }

                for (int i = 73; i <= 141; i++)
                {
                    mcqPostSubjects.Add(new MCQPostSubjectDM
                    {
                        PostId = null,
                        SubjectId = 1,
                        MCQId = i,
                        MCQType = DataModels.Enums.McqTypeDM.Subject
                    });
                }

                for (int i = 142; i <= 215; i++)
                {
                    mcqPostSubjects.Add(new MCQPostSubjectDM
                    {
                        PostId = null,
                        SubjectId = 3,
                        MCQId = i,
                        MCQType = DataModels.Enums.McqTypeDM.Subject
                    });
                }

                for (int i = 1; i <= 215; i++)
                {
                    mcqPostSubjects.Add(new MCQPostSubjectDM
                    {
                        PostId = 1,
                        SubjectId = null,
                        MCQId = i,
                        MCQType = DataModels.Enums.McqTypeDM.Post
                    });

                }
                for (int i = 1; i <= 215; i++)
                {
                    mcqPostSubjects.Add(new MCQPostSubjectDM
                    {
                        PostId = 2,
                        SubjectId = null,
                        MCQId = i,
                        MCQType = DataModels.Enums.McqTypeDM.Post
                    });

                }

                // Assuming _context is your database context
                await _context.MCQPostSubjects.AddRangeAsync(mcqPostSubjects);
                await _context.SaveChangesAsync();

                return "Database seeded successfully!";
            }
            catch(Exception e)
            {
                throw e;
            }
        }
    }
}
